{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Picker } from '@react-native-picker/picker';\nimport { Text, Block, Button } from 'galio-framework';\nimport styles from \"../../styles/styles\";\nimport { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport DefaultCategories from \"../../constantData/categories\";\nimport { useRoute } from '@react-navigation/native';\nimport axiosInstance from \"../../services/AxiosInstance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddItem = function AddItem(props) {\n  var route = useRoute();\n\n  var _useState = useState({\n    name: \"\",\n    description: \"\",\n    amount: 0,\n    category: \"\",\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDateOpen = _useState6[0],\n      setDateOpen = _useState6[1];\n\n  useEffect(function () {\n    setCategories(route.name == \"Add Expense\" ? DefaultCategories.expenses : DefaultCategories.assets);\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      category: route.name == \"Add Expense\" ? DefaultCategories.expenses[0] : DefaultCategories.assets[0]\n    }));\n  }, []);\n\n  var onDateChange = function onDateChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      date: currentDate\n    }));\n  };\n\n  var handleChange = function handleChange(val, field) {\n    if (field === \"amount\") {\n      if (isNaN(val)) {\n        val = formState.amount;\n      } else {\n        if (val == \"\" || val == \" \") {\n          val = 0;\n        }\n\n        val = parseInt(val);\n      }\n    }\n\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, _defineProperty({}, field, val)));\n  };\n\n  var getDate = function getDate() {\n    DateTimePickerAndroid.open({\n      value: formState.date,\n      onChange: onDateChange,\n      mode: \"date\"\n    });\n  };\n\n  var submitItem = function submitItem() {\n    var type = route.name == \"Add Expense\" ? \"Expenses\" : \"Assets\";\n\n    if (formState.category && formState.date && formState.name && formState.amount && formState.description) {\n      axiosInstance.post(\"/\" + type.toLocaleLowerCase() + \"/\", formState).then(function (res) {\n        props.navigation.navigate(type);\n      }).catch(function (e) {\n        console.log(e);\n        alert(\"error adding asset\");\n      });\n    }\n  };\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        marginHorizontal: \"5%\",\n        marginVertical: \"2%\"\n      },\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(val) {\n          return handleChange(val, \"name\");\n        },\n        value: formState.name,\n        placeholder: \"name\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(val) {\n          return handleChange(val, \"description\");\n        },\n        value: formState.description,\n        placeholder: \"description\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(val) {\n          return handleChange(val, \"amount\");\n        },\n        value: formState.amount + \"\",\n        placeholder: \"amount\"\n      }), JSON.stringify(categories) == JSON.stringify([]) ? _jsxs(Text, {\n        children: [_jsx(ActivityIndicator, {\n          size: \"small\",\n          color: \"#0000ff\"\n        }), \"Loading Categories\"]\n      }) : _jsx(Picker, {\n        selectedValue: formState.category,\n        style: styles.input,\n        onValueChange: function onValueChange(val, index) {\n          return handleChange(val, \"category\");\n        },\n        children: categories.map(function (category, index) {\n          return _jsx(Picker.Item, {\n            label: category,\n            value: category\n          }, index);\n        })\n      }), _jsxs(Text, {\n        style: {\n          marginLeft: 15,\n          fontSize: 15\n        },\n        children: [\"Date: \", formState.date.toLocaleDateString(\"en-us\")]\n      }), _jsx(Button, {\n        color: styles.btnBasic.color,\n        onPress: getDate,\n        children: _jsx(Text, {\n          style: {\n            color: \"black\"\n          },\n          children: \"Select Date\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.flexContainerRow,\n      children: _jsx(View, {\n        style: [styles.flexItem, {\n          marginLeft: \"26%\"\n        }],\n        children: _jsx(Button, {\n          color: styles.btnSubmit.color,\n          onPress: submitItem,\n          children: props.title\n        })\n      })\n    })]\n  });\n};\n\nexport default AddItem;","map":{"version":3,"sources":["E:/Documents/Semester 7/MAD/Project/client/components/AddItem/AddItem.jsx"],"names":["React","useState","useEffect","Picker","Text","Block","Button","styles","DateTimePickerAndroid","DefaultCategories","useRoute","axiosInstance","AddItem","props","route","name","description","amount","category","date","Date","formState","setFormState","categories","setCategories","isDateOpen","setDateOpen","expenses","assets","onDateChange","event","selectedDate","currentDate","handleChange","val","field","isNaN","parseInt","getDate","open","value","onChange","mode","submitItem","type","post","toLocaleLowerCase","then","res","navigation","navigate","catch","e","console","log","alert","marginHorizontal","marginVertical","input","JSON","stringify","index","map","marginLeft","fontSize","toLocaleDateString","btnBasic","color","flexContainerRow","flexItem","btnSubmit","title"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { View, SafeAreaView ,TextInput , ActivityIndicator} from \"react-native\"\r\nimport {Picker} from '@react-native-picker/picker'\r\nimport { Text, Block, Button} from 'galio-framework'\r\nimport styles from '../../styles/styles'\r\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker'\r\nimport DefaultCategories from '../../constantData/categories'\r\nimport {useRoute} from '@react-navigation/native';\r\nimport axiosInstance from '../../services/AxiosInstance'\r\nconst AddItem = (props)=>{\r\n    const route = useRoute()\r\n    const [formState, setFormState] = useState({\r\n        name:\"\",\r\n        description:\"\",\r\n        amount: 0,\r\n        category:\"\",\r\n        date: new Date()\r\n    })\r\n    const [categories, setCategories]= useState([])\r\n    const [isDateOpen, setDateOpen] = useState(false)\r\n    useEffect(()=>{\r\n    setCategories(route.name == \"Add Expense\" ? DefaultCategories.expenses:DefaultCategories.assets )\r\n    setFormState({...formState, category: route.name == \"Add Expense\" ? DefaultCategories.expenses[0]:DefaultCategories.assets[0]})\r\n    \r\n},[])\r\n    const onDateChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate;\r\n        setFormState({...formState, date:currentDate});\r\n      };\r\n    \r\n    const handleChange = (val, field)=>{\r\n        if (field === \"amount\"){\r\n            if (isNaN(val)){\r\n                val = formState.amount\r\n            }else{\r\n                if (val == \"\" || val == \" \"){\r\n                    val = 0\r\n                }\r\n                val = parseInt(val)\r\n            }\r\n        }\r\n        setFormState({\r\n            ...formState,\r\n            [field]:val\r\n        })\r\n    }\r\n    const getDate = ()=>{\r\n        DateTimePickerAndroid.open({\r\n            value:formState.date,\r\n            onChange:onDateChange,\r\n            mode:\"date\"\r\n        })\r\n    }\r\n    \r\n    const submitItem = ()=>{\r\n        const type = route.name == \"Add Expense\"? \"Expenses\" : \"Assets\"\r\n        if (formState.category && formState.date && formState.name && formState.amount && formState.description){\r\n            // validated\r\n            axiosInstance.post(`/${type.toLocaleLowerCase()}/`, formState).then(res=>{\r\n                props.navigation.navigate(type)\r\n            }).catch(e=>{\r\n                console.log(e)\r\n                alert(\"error adding asset\")\r\n            })\r\n        }\r\n    }\r\n    return (\r\n    <View>\r\n        <View style={{marginHorizontal:\"5%\", marginVertical:\"2%\"}}>\r\n            <TextInput \r\n                        style={styles.input}\r\n                        onChangeText={(val)=>handleChange(val, \"name\")}\r\n                        value={formState.name}\r\n                        placeholder=\"name\"\r\n            />\r\n            <TextInput  \r\n                        style={styles.input}\r\n                        onChangeText={(val)=>handleChange(val, \"description\")}\r\n                        value={formState.description}\r\n                        placeholder=\"description\"\r\n                        \r\n            />\r\n            <TextInput \r\n                        style={styles.input}\r\n                        keyboardType=\"numeric\"\r\n                        onChangeText={(val)=>handleChange(val, \"amount\")}\r\n                        value={formState.amount+\"\"}\r\n                        placeholder=\"amount\"\r\n            />\r\n           { JSON.stringify(categories) == JSON.stringify([])? <Text><ActivityIndicator size=\"small\" color=\"#0000ff\" />Loading Categories</Text>: <Picker \r\n                selectedValue={formState.category} \r\n                style={styles.input}\r\n                onValueChange={(val, index)=>handleChange(val, \"category\")}\r\n                >\r\n                    {categories.map((category, index)=><Picker.Item key={index} label={category} value={category}/>)}\r\n            </Picker>}\r\n\r\n            <Text style={{marginLeft:15, fontSize:15}}>Date: {formState.date.toLocaleDateString(\"en-us\")}</Text>\r\n            <Button color={styles.btnBasic.color} onPress={getDate}><Text style={{color:\"black\"}}>Select Date</Text></Button>\r\n            {/* {isDateOpen && <DateTimePicker mode=\"date\" value={formState.date} onChange={(val)=>{handleChange(val, 'date')}}/>} */}\r\n\r\n\r\n        </View>\r\n            <View style={styles.flexContainerRow}>\r\n                <View style={[styles.flexItem, {marginLeft:\"26%\"}]}>\r\n                    <Button color={styles.btnSubmit.color} onPress={submitItem}>{props.title}</Button>\r\n                </View>\r\n            \r\n            </View>   \r\n        \r\n    </View>)\r\n}\r\nexport default AddItem\r\n"]},"metadata":{},"sourceType":"module"}