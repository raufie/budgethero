{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SINGLE_SERIES_WITH_NUMBERS = 0;\nvar SINGLE_SERIES_WITH_OBJECTS = 1;\nvar MULTI_SERIES = 2;\n\nfunction flattenData(data) {\n  var numberCount = 0;\n  var objectWithYCount = 0;\n  var multiSeriesCount = 0;\n  var length = data.length;\n  data.map(function (obj) {\n    if (typeof obj === 'number') {\n      numberCount++;\n    } else if (typeof obj === 'object') {\n      if (typeof obj.y === 'number') {\n        objectWithYCount++;\n      } else if (Array.isArray(obj.data)) {\n        multiSeriesCount++;\n      }\n    }\n  });\n\n  if (numberCount === length || objectWithYCount === length) {\n    return [{\n      seriesName: '',\n      data: data\n    }];\n  } else if (multiSeriesCount === length) {\n    return data;\n  } else {\n    return [{\n      seriesName: '',\n      data: []\n    }];\n  }\n}\n\nfunction getMaxValue(data) {\n  var values = [];\n  data.map(function (value) {\n    if (typeof value === 'number') {\n      values.push(value);\n    } else if (typeof value === 'object') {\n      if (typeof value.y === 'number') {\n        values.push(value.y);\n      } else if (Array.isArray(value.data)) {\n        value.data.map(function (v) {\n          if (typeof v === 'number') {\n            values.push(v);\n          } else if (typeof v === 'object' && typeof v.y === 'number') {\n            values.push(v.y);\n          }\n        });\n      }\n    }\n  });\n  if (values.length === 0) return 0;\n  return Math.max.apply(null, values);\n}\n\nexport var initData = function initData(dataProp, height, gap) {\n  var numberOfPoints = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var guideArray, max, sortedData;\n\n  if (!dataProp || !Array.isArray(dataProp) || dataProp.length === 0) {\n    return {\n      sortedData: [],\n      max: 0,\n      guideArray: []\n    };\n  }\n\n  max = getMaxValue(dataProp);\n  guideArray = getGuideArray(max, height, numberOfPoints);\n  dataProp = flattenData(dataProp);\n  sortedData = refineData(dataProp, max, height, gap);\n  return {\n    sortedData: sortedData,\n    max: max,\n    selectedIndex: null,\n    nowHeight: 200,\n    nowWidth: 200,\n    scrollPosition: 0,\n    nowX: 0,\n    nowY: 0,\n    guideArray: guideArray\n  };\n};\nexport var refineData = function refineData(flattenData, max, height, gap) {\n  var result = [];\n  flattenData.map(function (series) {\n    var dataProp = series.data;\n    var object = {\n      seriesName: series.seriesName,\n      seriesColor: series.color\n    };\n    var data = [];\n    var length = dataProp.length;\n    var simpleTypeCount = 0;\n    var objectTypeCount = 0;\n\n    for (var i = 0; i < length; i++) {\n      var maxClone = max;\n\n      if (maxClone === 0) {\n        maxClone = 1;\n      }\n\n      var dataObject = {};\n\n      if (typeof dataProp[i] === 'number') {\n        simpleTypeCount++;\n        dataObject.ratioY = dataProp[i] / maxClone * height;\n        dataObject.y = dataProp[i];\n        dataObject = {\n          gap: i * gap,\n          ratioY: dataProp[i] / maxClone * height,\n          y: dataProp[i]\n        };\n      } else if (typeof dataProp[i] === 'object') {\n        var isEmpty = false;\n\n        if (dataProp[i].y === null) {\n          var nullCount = 0;\n\n          for (var j = i; j < dataProp.length; j++) {\n            if (dataProp[j].y) {\n              break;\n            } else {\n              nullCount++;\n            }\n          }\n\n          dataProp[i].y = dataProp[i - 1].y + (dataProp[i + nullCount].y - dataProp[i - 1].y) / (nullCount + 1);\n          isEmpty = true;\n        }\n\n        if (typeof dataProp[i].y === 'number' && dataProp[i].x) {\n          objectTypeCount++;\n          dataObject = {\n            gap: i * gap,\n            ratioY: dataProp[i].y / maxClone * height,\n            x: dataProp[i].x,\n            y: dataProp[i].y,\n            isEmpty: isEmpty\n          };\n        }\n      }\n\n      data.push(dataObject);\n    }\n\n    var isValidate = false;\n\n    if (simpleTypeCount === length || objectTypeCount === length) {\n      isValidate = true;\n    }\n\n    if (isValidate) {\n      object.data = data.sort(function (a, b) {\n        return a['gap'] - b['gap'];\n      });\n    } else {\n      object.data = [];\n    }\n\n    result.push(object);\n  });\n  return result;\n};\nexport var getGuideArray = function getGuideArray(max, height) {\n  var numberOfPoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  var x = parseInt(max);\n  var arr = [];\n  var length;\n  var temp;\n  var postfix = '';\n\n  if (x === 0) {\n    return [];\n  }\n\n  if (x > -1 && x < 1000) {\n    x = Math.round(x * 10);\n    temp = 1;\n  } else if (x >= 1000 && x < 1000000) {\n    postfix = 'K';\n    x = Math.round(x / 100);\n    temp = 1000;\n  } else if (x >= 1000000 && x < 1000000000) {\n    postfix = 'M';\n    x = Math.round(x / 100000);\n    temp = 1000000;\n  } else {\n    postfix = 'B';\n    x = Math.round(x / 100000000);\n    temp = 1000000000;\n  }\n\n  length = x.toString().length;\n  x = _.round(x, -1 * length + 1) / 10;\n  var first = parseInt(x.toString()[0]);\n\n  if (first > -1 && first < 3) {\n    x = 2.5 * x / first;\n  } else if (first > 2 && first < 6) {\n    x = 5 * x / first;\n  } else {\n    x = 10 * x / first;\n  }\n\n  for (var i = 1; i < numberOfPoints + 1; i++) {\n    var v = x / numberOfPoints * i;\n    arr.push([v + postfix, v * temp / max * height, 1 * temp / max * height]);\n  }\n\n  return arr;\n};\nexport var drawYAxis = function drawYAxis() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#e0e0e0';\n  return _jsx(View, {\n    style: {\n      borderRightWidth: 1,\n      borderColor: color,\n      width: 1,\n      height: '100%',\n      marginRight: 0\n    }\n  });\n};\nexport var drawYAxisLabels = function drawYAxisLabels(arr, height, minValue) {\n  var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#000000';\n  return _jsx(View, {\n    style: {\n      width: 33,\n      height: height,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      marginBottom: minValue && arr && arr.length > 0 ? -1 * arr[0][2] * minValue : null,\n      overflow: 'hidden'\n    },\n    children: arr.length === 0 ? _jsx(View, {\n      style: {\n        bottom: 0,\n        position: 'absolute'\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 11\n        },\n        children: \"0\"\n      })\n    }, 'guide0') : arr.map(function (v, i) {\n      if (v[1] > height) return null;\n      return _jsx(View, {\n        style: {\n          bottom: v[1] - 5,\n          position: 'absolute'\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 11,\n            color: color\n          },\n          children: v[0]\n        })\n      }, 'guide' + i);\n    })\n  });\n};\nexport var drawGuideLine = function drawGuideLine(arr) {\n  var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#e0e0e0';\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute'\n    },\n    children: arr.map(function (v, i) {\n      return _jsx(View, {\n        style: {\n          width: '100%',\n          borderTopWidth: 1,\n          borderTopColor: color,\n          bottom: v[1],\n          position: 'absolute'\n        }\n      }, 'guide' + i);\n    })\n  });\n};\nexport var numberWithCommas = function numberWithCommas(x) {\n  var summary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var postfix = '';\n\n  if (summary) {\n    if (x >= 1000 && x < 1000000) {\n      postfix = 'K';\n      x = Math.round(x / 100) / 10;\n    } else if (x >= 1000000 && x < 1000000000) {\n      postfix = 'M';\n      x = Math.round(x / 100000) / 10;\n    } else if (x >= 1000000000 && x < 1000000000000) {\n      postfix = 'B';\n      x = Math.round(x / 100000000) / 10;\n    }\n  }\n\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + postfix;\n};\nexport var drawXAxis = function drawXAxis() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#e0e0e0';\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: color\n    }\n  });\n};\nexport var drawXAxisLabels = function drawXAxisLabels(sortedData, gap) {\n  var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '#000000';\n  var showEvenNumberXaxisLabel = arguments.length > 3 ? arguments[3] : undefined;\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      paddingVertical: 10,\n      height: 10\n    },\n    children: sortedData.map(function (data, i) {\n      if (data['x'] && i % 2 === 1 || !showEvenNumberXaxisLabel) {\n        return _jsx(View, {\n          style: {\n            position: 'absolute',\n            left: data['gap'] - gap / 2,\n            width: gap,\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 9,\n              color: color\n            },\n            children: data['x']\n          })\n        }, 'label' + i);\n      } else {\n        return null;\n      }\n    })\n  });\n};","map":{"version":3,"sources":["E:/Documents/Semester 7/MAD/Project/client/node_modules/react-native-pure-chart/examples/pure-chart/common.js"],"names":["_","React","SINGLE_SERIES_WITH_NUMBERS","SINGLE_SERIES_WITH_OBJECTS","MULTI_SERIES","flattenData","data","numberCount","objectWithYCount","multiSeriesCount","length","map","obj","y","Array","isArray","seriesName","getMaxValue","values","value","push","v","Math","max","apply","initData","dataProp","height","gap","numberOfPoints","guideArray","sortedData","getGuideArray","refineData","selectedIndex","nowHeight","nowWidth","scrollPosition","nowX","nowY","result","series","object","seriesColor","color","simpleTypeCount","objectTypeCount","i","maxClone","dataObject","ratioY","isEmpty","nullCount","j","x","isValidate","sort","a","b","parseInt","arr","temp","postfix","round","toString","first","drawYAxis","borderRightWidth","borderColor","width","marginRight","drawYAxisLabels","minValue","justifyContent","alignItems","marginBottom","overflow","bottom","position","fontSize","drawGuideLine","borderTopWidth","borderTopColor","numberWithCommas","summary","replace","drawXAxis","drawXAxisLabels","showEvenNumberXaxisLabel","paddingVertical","left"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport {View, Text} from 'react-native'\n\nconst SINGLE_SERIES_WITH_NUMBERS = 0\nconst SINGLE_SERIES_WITH_OBJECTS = 1\nconst MULTI_SERIES = 2\n\nfunction flattenData (data) {\n  let numberCount = 0\n  let objectWithYCount = 0\n  let multiSeriesCount = 0\n  let length = data.length\n  data.map((obj) => {\n    if (typeof obj === 'number') {\n      numberCount++\n    } else if (typeof obj === 'object') {\n      if (typeof obj.y === 'number') {\n        objectWithYCount++\n      } else if (Array.isArray(obj.data)) {\n        multiSeriesCount++\n      }\n    }\n  })\n\n  if (numberCount === length || objectWithYCount === length) {\n    return [{\n      seriesName: '',\n      data: data\n    }]\n  } else if (multiSeriesCount === length) {\n    return data\n  } else {\n    return [{\n      seriesName: '',\n      data: []\n    }]\n  }\n}\n\nfunction getMaxValue (data) {\n  let values = []\n\n  data.map((value) => {\n    if (typeof value === 'number') {\n      values.push(value)\n    } else if (typeof value === 'object') {\n      if (typeof value.y === 'number') {\n        values.push(value.y)\n      } else if (Array.isArray(value.data)) {\n        value.data.map((v) => {\n          if (typeof v === 'number') {\n            values.push(v)\n          } else if (typeof v === 'object' && typeof v.y === 'number') {\n            values.push(v.y)\n          }\n        })\n      }\n    }\n  })\n\n  if (values.length === 0) return 0\n\n  return Math.max.apply(null, values)\n}\n\nexport const initData = (dataProp, height, gap, numberOfPoints = 5) => {\n  let guideArray, max, sortedData\n  if (!dataProp || !Array.isArray(dataProp) || dataProp.length === 0) {\n    return {\n      sortedData: [],\n      max: 0,\n      guideArray: []\n    }\n  }\n\n  max = getMaxValue(dataProp)\n  guideArray = getGuideArray(max, height, numberOfPoints)\n\n  dataProp = flattenData(dataProp)\n\n  sortedData = refineData(dataProp, max, height, gap)\n  return {\n    sortedData: sortedData,\n    max: max,\n    selectedIndex: null,\n    nowHeight: 200,\n    nowWidth: 200,\n    scrollPosition: 0,\n    nowX: 0,\n    nowY: 0,\n    guideArray: guideArray\n  }\n}\n\nexport const refineData = (flattenData, max, height, gap) => {\n  let result = []\n\n  flattenData.map((series) => {\n    let dataProp = series.data\n    let object = {\n      seriesName: series.seriesName,\n      seriesColor: series.color\n    }\n    let data = []\n    let length = dataProp.length\n    let simpleTypeCount = 0\n    let objectTypeCount = 0\n\n    for (let i = 0; i < length; i++) {\n      let maxClone = max\n\n      if (maxClone === 0) {\n        maxClone = 1\n      }\n      let dataObject = {}\n\n      if (typeof dataProp[i] === 'number') {\n        simpleTypeCount++\n        dataObject.ratioY = dataProp[i] / maxClone * height\n        dataObject.y = dataProp[i]\n        dataObject = {\n          gap: i * gap,\n          ratioY: dataProp[i] / maxClone * height,\n          y: dataProp[i]\n        }\n      } else if (typeof dataProp[i] === 'object') {\n        let isEmpty = false\n        if (dataProp[i].y === null) {\n          let nullCount = 0\n          for (let j = i; j < dataProp.length; j++) {\n            if (dataProp[j].y) {\n              break\n            } else {\n              nullCount++\n            }\n          }\n          dataProp[i].y = dataProp[i - 1].y + (dataProp[i + nullCount].y - dataProp[i - 1].y) / (nullCount + 1)\n          isEmpty = true\n          /* if (dataProp[i + 1] && dataProp[i - 1]) {\n            dataProp[i].y = (dataProp[i - 1].y + dataProp[i + 1].y) / 2\n            isEmpty = true\n          } */\n        }\n        if (typeof dataProp[i].y === 'number' && dataProp[i].x) {\n          objectTypeCount++\n          dataObject = {\n            gap: i * gap,\n            ratioY: dataProp[i].y / maxClone * height,\n            x: dataProp[i].x,\n            y: dataProp[i].y,\n            isEmpty: isEmpty\n          }\n        }\n      }\n      data.push(dataObject)\n    }\n\n    // validation\n    let isValidate = false\n    if (simpleTypeCount === length || objectTypeCount === length) {\n      isValidate = true\n    }\n\n    if (isValidate) {\n      object.data = data.sort((a, b) => {\n        return a['gap'] - b['gap']\n        // return a[0] - b[0]\n      })\n    } else {\n      object.data = []\n    }\n\n    result.push(object)\n  })\n\n  return result\n}\n\nexport const getGuideArray = (max, height, numberOfPoints = 5) => {\n  let x = parseInt(max)\n\n  let arr = []\n  let length\n  let temp\n  let postfix = ''\n\n  if (x === 0) {\n    return []\n  }\n\n  if (x > -1 && x < 1000) {\n    x = Math.round(x * 10)\n    temp = 1\n  } else if (x >= 1000 && x < 1000000) {\n    postfix = 'K'\n    x = Math.round(x / 100)\n    temp = 1000\n  } else if (x >= 1000000 && x < 1000000000) {\n    postfix = 'M'\n    x = Math.round(x / 100000)\n    temp = 1000000\n  } else {\n    postfix = 'B'\n    x = Math.round(x / 100000000)\n    temp = 1000000000\n  }\n  length = x.toString().length\n\n  x = _.round(x, -1 * length + 1) / 10\n  let first = parseInt(x.toString()[0])\n\n  if (first > -1 && first < 3) { // 1,2\n    x = 2.5 * x / first\n  } else if (first > 2 && first < 6) { // 4,5\n    x = 5 * x / first\n  } else {\n    x = 10 * x / first\n  }\n\n  for (let i = 1; i < numberOfPoints + 1; i++) {\n    let v = x / numberOfPoints * i\n    arr.push([v + postfix, v * temp / max * height, 1 * temp / max * height])\n  }\n\n  return arr\n}\n\nexport const drawYAxis = (color = '#e0e0e0') => {\n  return (\n    <View style={{\n      borderRightWidth: 1,\n      borderColor: color,\n      width: 1,\n      height: '100%',\n      marginRight: 0\n\n    }} />\n\n  )\n}\n\nexport const drawYAxisLabels = (arr, height, minValue, color = '#000000') => {\n  return (\n    <View style={{\n      width: 33,\n      height: height,\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end',\n      marginBottom: minValue && arr && arr.length > 0 ? -1 * arr[0][2] * minValue : null,\n      overflow: 'hidden'\n    }}>\n\n      {arr.length === 0 ? (\n        <View\n          key={'guide0'}\n          style={{\n            bottom: 0,\n            position: 'absolute'\n          }}>\n          <Text style={{fontSize: 11}}>0</Text>\n        </View>\n      ) : arr.map((v, i) => {\n        if (v[1] > height) return null\n        return (\n          <View\n            key={'guide' + i}\n            style={{\n              bottom: v[1] - 5,\n              position: 'absolute'\n            }}>\n            <Text style={{fontSize: 11, color: color}}>{v[0]}</Text>\n          </View>\n        )\n      })}\n\n    </View>\n  )\n}\nexport const drawGuideLine = (arr, color = '#e0e0e0') => {\n  return (\n    <View style={{\n      width: '100%',\n      height: '100%',\n      position: 'absolute'\n    }}>\n\n      {arr.map((v, i) => {\n        return (\n          <View\n            key={'guide' + i}\n            style={{\n              width: '100%',\n              borderTopWidth: 1,\n              borderTopColor: color,\n              bottom: v[1],\n              position: 'absolute'\n            }} />\n        )\n      })}\n\n    </View>\n  )\n}\n\nexport const numberWithCommas = (x, summary = true) => {\n  let postfix = ''\n  if (summary) {\n    if (x >= 1000 && x < 1000000) {\n      postfix = 'K'\n      x = Math.round(x / 100) / 10\n    } else if (x >= 1000000 && x < 1000000000) {\n      postfix = 'M'\n      x = Math.round(x / 100000) / 10\n    } else if (x >= 1000000000 && x < 1000000000000) {\n      postfix = 'B'\n      x = Math.round(x / 100000000) / 10\n    }\n  }\n\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + postfix\n}\n\nexport const drawXAxis = (color = '#e0e0e0') => {\n  return (\n    <View style={{\n      width: '100%',\n      borderTopWidth: 1,\n      borderTopColor: color\n    }} />\n  )\n}\nexport const drawXAxisLabels = (sortedData, gap, color = '#000000', showEvenNumberXaxisLabel) => {\n  return (\n    <View style={{\n      width: '100%',\n      paddingVertical: 10,\n      height: 10\n    }}>\n      {sortedData.map((data, i) => {\n        // if (data[3] && i % 2 === 1) {\n        if (data['x'] && i % 2 === 1 || !showEvenNumberXaxisLabel) {\n          return (\n            <View key={'label' + i} style={{\n              position: 'absolute',\n              // left: data[0] - gap / 2,\n              left: data['gap'] - gap / 2,\n              width: gap,\n              alignItems: 'center'\n            }}>\n              <Text style={{fontSize: 9, color: color}}>\n                {\n                  // data[3]\n                  data['x']\n                }\n              </Text>\n            </View>\n          )\n        } else {\n          return null\n        }\n      })}\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}