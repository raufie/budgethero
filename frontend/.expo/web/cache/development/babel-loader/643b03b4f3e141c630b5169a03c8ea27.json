{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Picker } from '@react-native-picker/picker';\nimport { Text, Block, Button } from 'galio-framework';\nimport styles from \"../../styles/styles\";\nimport { DateTimePickerAndroid } from '@react-native-community/datetimepicker';\nimport { AntDesign } from '@expo/vector-icons';\nimport DefaultCategories from \"../../constantData/categories\";\nimport { useRoute } from '@react-navigation/native';\nimport axiosInstance from \"../../services/AxiosInstance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ItemDetails = function ItemDetails(props) {\n  var route = useRoute();\n\n  var _useState = useState({\n    name: \"\",\n    description: \"\",\n    amount: 0,\n    category: \"\",\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var params = props.route.params;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDateOpen = _useState6[0],\n      setDateOpen = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEditable = _useState8[0],\n      setEditable = _useState8[1];\n\n  useEffect(function () {\n    var data = props.route.params;\n    data.date = new Date(data.date);\n    setFormState(_objectSpread(_objectSpread({}, formState), data));\n    setCategories(route.name == \"Expense Details\" ? DefaultCategories.expenses : DefaultCategories.assets);\n  }, []);\n\n  var onDateChange = function onDateChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      date: currentDate\n    }));\n  };\n\n  var handleChange = function handleChange(val, field) {\n    if (field === \"amount\") {\n      if (isNaN(val)) {\n        val = formState.amount;\n      } else {\n        val = parseInt(val);\n      }\n    }\n\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, _defineProperty({}, field, val)));\n  };\n\n  var getDate = function getDate() {\n    DateTimePickerAndroid.open({\n      value: formState.date,\n      onChange: onDateChange,\n      mode: \"date\"\n    });\n  };\n\n  var saveChanges = function saveChanges() {\n    if (formState.category && formState.date && formState.name && formState.amount && formState.description) {\n      var type = route.name == \"Expense Details\" ? \"Expenses\" : \"Assets\";\n      axiosInstance.put(type.toLocaleLowerCase() + \"/\" + props.route.params._id, formState).then(function (res) {\n        alert('Succesfully updated');\n      }).catch(function (e) {\n        alert(\"not updated\");\n      });\n    }\n\n    console.log(formState);\n  };\n\n  var deleteItem = function deleteItem() {\n    var type = route.name == \"Expense Details\" ? \"Expenses\" : \"Assets\";\n    axiosInstance.delete(type.toLocaleLowerCase() + \"/\" + props.route.params._id).then(function (res) {\n      alert('Succesfully deleted item');\n      props.navigation.navigate(\"Assets\");\n    }).catch(function (e) {\n      console.log(e);\n      alert(\"not deleted\");\n    });\n  };\n\n  var cancelChanges = function cancelChanges() {\n    var data = props.route.params;\n    setFormState(_objectSpread(_objectSpread({}, formState), data));\n    setEditable(!isEditable);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: [{\n        marginLeft: \"-4.5%\"\n      }],\n      children: _jsxs(View, {\n        style: styles.flexContainerRow,\n        children: [!isEditable && _jsx(View, {\n          style: [styles.flexItem],\n          children: _jsx(Button, {\n            color: '#B82121',\n            style: {\n              marginTop: \"7.5%\"\n            },\n            onPress: function onPress() {\n              deleteItem();\n            },\n            children: _jsxs(View, {\n              style: styles.flexContainerRow,\n              children: [_jsx(AntDesign, {\n                name: \"delete\",\n                size: 24,\n                color: \"white\",\n                fontSize: \"large\"\n              }), _jsx(Text, {\n                style: styles.h2,\n                color: \"white\",\n                children: \"Delete\"\n              })]\n            })\n          })\n        }), !isEditable && _jsx(View, {\n          style: styles.flexItem,\n          children: _jsx(Button, {\n            color: '#2885F4',\n            style: {\n              marginTop: \"7.5%\"\n            },\n            onPress: function onPress() {\n              setEditable(!isEditable);\n            },\n            children: _jsxs(View, {\n              style: styles.flexContainerRow,\n              children: [_jsx(AntDesign, {\n                name: \"edit\",\n                size: 24,\n                color: \"white\",\n                fontSize: \"large\"\n              }), _jsx(Text, {\n                style: styles.h2,\n                color: \"white\",\n                children: \"Edit\"\n              })]\n            })\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: {\n        marginHorizontal: \"5%\",\n        marginVertical: \"2%\"\n      },\n      children: [_jsx(TextInput, {\n        style: [styles.input, isEditable ? styles.editableInput : null],\n        onChangeText: function onChangeText(val) {\n          return handleChange(val, \"name\");\n        },\n        value: formState.name,\n        placeholder: \"name\",\n        editable: isEditable\n      }), _jsx(TextInput, {\n        style: [styles.input, isEditable ? styles.editableInput : null],\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(val) {\n          return handleChange(val, \"amount\");\n        },\n        value: formState.amount + \"\",\n        placeholder: \"amount\",\n        editable: isEditable\n      }), JSON.stringify(categories) == JSON.stringify([]) ? _jsxs(Text, {\n        children: [_jsx(ActivityIndicator, {\n          size: \"small\",\n          color: \"#0000ff\"\n        }), \"Loading Categories\"]\n      }) : _jsx(Picker, {\n        selectedValue: formState.category,\n        style: [styles.input, isEditable ? styles.editableInput : null],\n        onValueChange: function onValueChange(val, index) {\n          return handleChange(val, \"category\");\n        },\n        enabled: isEditable,\n        children: categories.map(function (category, index) {\n          return _jsx(Picker.Item, {\n            label: category,\n            value: category\n          }, index);\n        })\n      }), _jsxs(Text, {\n        style: {\n          marginLeft: 15,\n          fontSize: 15\n        },\n        children: [_jsx(Text, {\n          style: styles.h2,\n          children: \"Date:\"\n        }), \" \", formState.date.toLocaleDateString(\"en-us\")]\n      }), isEditable && _jsx(Button, {\n        color: styles.btnBasic.color,\n        onPress: getDate,\n        children: _jsx(Text, {\n          style: {\n            color: \"black\"\n          },\n          children: \"Select Date\"\n        })\n      })]\n    }), isEditable && _jsxs(View, {\n      style: styles.flexContainerRow,\n      children: [_jsx(View, {\n        style: [styles.flexItem, {\n          marginLeft: \"0.5%\"\n        }],\n        children: _jsx(Button, {\n          color: '#F42828',\n          onPress: cancelChanges,\n          children: \"Cancel Changes\"\n        })\n      }), _jsx(View, {\n        style: [styles.flexItem],\n        children: _jsx(Button, {\n          color: '#21B855',\n          onPress: saveChanges,\n          children: \"Save Changes\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default ItemDetails;","map":{"version":3,"sources":["E:/Documents/Semester 7/MAD/Project/client/components/ItemDetails/ItemDetails.jsx"],"names":["React","useState","useEffect","Picker","Text","Block","Button","styles","DateTimePickerAndroid","AntDesign","DefaultCategories","useRoute","axiosInstance","ItemDetails","props","route","name","description","amount","category","date","Date","formState","setFormState","params","categories","setCategories","isDateOpen","setDateOpen","isEditable","setEditable","data","expenses","assets","onDateChange","event","selectedDate","currentDate","handleChange","val","field","isNaN","parseInt","getDate","open","value","onChange","mode","saveChanges","type","put","toLocaleLowerCase","_id","then","res","alert","catch","e","console","log","deleteItem","delete","navigation","navigate","cancelChanges","marginLeft","flexContainerRow","flexItem","marginTop","h2","marginHorizontal","marginVertical","input","editableInput","JSON","stringify","index","map","fontSize","toLocaleDateString","btnBasic","color"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;;;;;AAEA,SAAQC,MAAR,QAAqB,6BAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAmC,iBAAnC;AACA,OAAOC,MAAP;AACA,SAAQC,qBAAR,QAAoC,wCAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,iBAAP;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,OAAOC,aAAP;;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAS;AACzB,MAAMC,KAAK,GAAGJ,QAAQ,EAAtB;;AACA,kBAAkCV,QAAQ,CAAC;AACvCe,IAAAA,IAAI,EAAC,EADkC;AAEvCC,IAAAA,WAAW,EAAC,EAF2B;AAGvCC,IAAAA,MAAM,EAAE,CAH+B;AAIvCC,IAAAA,QAAQ,EAAC,EAJ8B;AAKvCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AALiC,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAOA,MAAMC,MAAM,GAAGV,KAAK,CAACC,KAAN,CAAYS,MAA3B;;AACA,mBAAmCvB,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOwB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAkCzB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO0B,UAAP;AAAA,MAAmBC,WAAnB;;AACA,mBAAkC3B,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO4B,UAAP;AAAA,MAAmBC,WAAnB;;AACA5B,EAAAA,SAAS,CAAC,YAAI;AAEb,QAAI6B,IAAI,GAAGjB,KAAK,CAACC,KAAN,CAAYS,MAAvB;AACAO,IAAAA,IAAI,CAACX,IAAL,GAAY,IAAIC,IAAJ,CAASU,IAAI,CAACX,IAAd,CAAZ;AACDG,IAAAA,YAAY,iCAAKD,SAAL,GAAmBS,IAAnB,EAAZ;AACAL,IAAAA,aAAa,CAACX,KAAK,CAACC,IAAN,IAAc,iBAAd,GAAkCN,iBAAiB,CAACsB,QAApD,GAA6DtB,iBAAiB,CAACuB,MAAhF,CAAb;AACC,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,YAAR,EAAyB;AAC1C,QAAMC,WAAW,GAAGD,YAApB;AACAb,IAAAA,YAAY,iCAAKD,SAAL;AAAgBF,MAAAA,IAAI,EAACiB;AAArB,OAAZ;AACD,GAHH;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,KAAN,EAAc;AAC/B,QAAIA,KAAK,KAAK,QAAd,EAAuB;AACnB,UAAIC,KAAK,CAACF,GAAD,CAAT,EAAe;AACXA,QAAAA,GAAG,GAAGjB,SAAS,CAACJ,MAAhB;AACH,OAFD,MAEK;AACDqB,QAAAA,GAAG,GAAGG,QAAQ,CAACH,GAAD,CAAd;AACH;AACJ;;AACDhB,IAAAA,YAAY,iCACLD,SADK,2BAEPkB,KAFO,EAEAD,GAFA,GAAZ;AAIH,GAZD;;AAaA,MAAMI,OAAO,GAAG,SAAVA,OAAU,GAAI;AAChBnC,IAAAA,qBAAqB,CAACoC,IAAtB,CAA2B;AACvBC,MAAAA,KAAK,EAACvB,SAAS,CAACF,IADO;AAEvB0B,MAAAA,QAAQ,EAACZ,YAFc;AAGvBa,MAAAA,IAAI,EAAC;AAHkB,KAA3B;AAKH,GAND;;AAQA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAI;AACpB,QAAI1B,SAAS,CAACH,QAAV,IAAsBG,SAAS,CAACF,IAAhC,IAAwCE,SAAS,CAACN,IAAlD,IAA0DM,SAAS,CAACJ,MAApE,IAA8EI,SAAS,CAACL,WAA5F,EAAwG;AAEpG,UAAMgC,IAAI,GAAGlC,KAAK,CAACC,IAAN,IAAc,iBAAd,GAAiC,UAAjC,GAA8C,QAA3D;AAEAJ,MAAAA,aAAa,CAACsC,GAAd,CAAqBD,IAAI,CAACE,iBAAL,EAArB,SAAiDrC,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAAmB4B,GAApE,EAA2E9B,SAA3E,EAAsF+B,IAAtF,CAA2F,UAAAC,GAAG,EAAE;AAC5FC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,OAFD,EAEGC,KAFH,CAES,UAAAC,CAAC,EAAE;AACRF,QAAAA,KAAK,CAAC,aAAD,CAAL;AACH,OAJD;AAKH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYrC,SAAZ;AACH,GAZD;;AAaA,MAAMsC,UAAU,GAAG,SAAbA,UAAa,GAAI;AACnB,QAAMX,IAAI,GAAGlC,KAAK,CAACC,IAAN,IAAc,iBAAd,GAAiC,UAAjC,GAA8C,QAA3D;AAEAJ,IAAAA,aAAa,CAACiD,MAAd,CAAwBZ,IAAI,CAACE,iBAAL,EAAxB,SAAoDrC,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAAmB4B,GAAvE,EAA8EC,IAA9E,CAAmF,UAAAC,GAAG,EAAE;AACpFC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACAzC,MAAAA,KAAK,CAACgD,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B;AACH,KAHD,EAGGP,KAHH,CAGS,UAAAC,CAAC,EAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAF,MAAAA,KAAK,CAAC,aAAD,CAAL;AACH,KAND;AAOH,GAVD;;AAYA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,GAAI;AAE1B,QAAMjC,IAAI,GAAGjB,KAAK,CAACC,KAAN,CAAYS,MAAzB;AACAD,IAAAA,YAAY,iCAAKD,SAAL,GAAmBS,IAAnB,EAAZ;AACAD,IAAAA,WAAW,CAAC,CAACD,UAAF,CAAX;AACC,GALD;;AAOA,SACA,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC;AAACoC,QAAAA,UAAU,EAAC;AAAZ,OAAD,CAAb;AAAA,gBACQ,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE1D,MAAM,CAAC2D,gBAApB;AAAA,mBACC,CAACrC,UAAD,IAAe,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACtB,MAAM,CAAC4D,QAAR,CAAb;AAAA,oBAChB,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAE,SAAf;AAA0B,YAAA,KAAK,EAAE;AAACC,cAAAA,SAAS,EAAC;AAAX,aAAjC;AAAqD,YAAA,OAAO,EAAE,mBAAI;AAC9DR,cAAAA,UAAU;AACT,aAFL;AAAA,sBAGQ,MAAC,IAAD;AAAM,cAAA,KAAK,EAAErD,MAAM,CAAC2D,gBAApB;AAAA,yBACI,KAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,QAAhB;AAAyB,gBAAA,IAAI,EAAE,EAA/B;AAAmC,gBAAA,KAAK,EAAC,OAAzC;AAAkD,gBAAA,QAAQ,EAAC;AAA3D,gBADJ,EAEI,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE3D,MAAM,CAAC8D,EAApB;AAAwB,gBAAA,KAAK,EAAC,OAA9B;AAAA;AAAA,gBAFJ;AAAA;AAHR;AADgB,UADhB,EAUK,CAACxC,UAAD,IAAe,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEtB,MAAM,CAAC4D,QAApB;AAAA,oBAChB,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAE,SAAf;AAA0B,YAAA,KAAK,EAAE;AAACC,cAAAA,SAAS,EAAC;AAAX,aAAjC;AAAqD,YAAA,OAAO,EAAE,mBAAI;AAACtC,cAAAA,WAAW,CAAC,CAACD,UAAF,CAAX;AAAyB,aAA5F;AAAA,sBACI,MAAC,IAAD;AAAM,cAAA,KAAK,EAAEtB,MAAM,CAAC2D,gBAApB;AAAA,yBACI,KAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,MAAhB;AAAuB,gBAAA,IAAI,EAAE,EAA7B;AAAiC,gBAAA,KAAK,EAAC,OAAvC;AAAgD,gBAAA,QAAQ,EAAC;AAAzD,gBADJ,EAEI,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE3D,MAAM,CAAC8D,EAApB;AAAwB,gBAAA,KAAK,EAAC,OAA9B;AAAA;AAAA,gBAFJ;AAAA;AADJ;AADgB,UAVpB;AAAA;AADR,MADJ,EAqBI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,gBAAgB,EAAC,IAAlB;AAAwBC,QAAAA,cAAc,EAAC;AAAvC,OAAb;AAAA,iBACI,KAAC,SAAD;AACY,QAAA,KAAK,EAAE,CAAChE,MAAM,CAACiE,KAAR,EAAe3C,UAAU,GAAGtB,MAAM,CAACkE,aAAV,GAA0B,IAAnD,CADnB;AAEY,QAAA,YAAY,EAAE,sBAAClC,GAAD;AAAA,iBAAOD,YAAY,CAACC,GAAD,EAAM,MAAN,CAAnB;AAAA,SAF1B;AAGY,QAAA,KAAK,EAAEjB,SAAS,CAACN,IAH7B;AAIY,QAAA,WAAW,EAAC,MAJxB;AAKY,QAAA,QAAQ,EAAEa;AALtB,QADJ,EASI,KAAC,SAAD;AACY,QAAA,KAAK,EAAE,CAACtB,MAAM,CAACiE,KAAR,EAAe3C,UAAU,GAAGtB,MAAM,CAACkE,aAAV,GAA0B,IAAnD,CADnB;AAEY,QAAA,YAAY,EAAC,SAFzB;AAGY,QAAA,YAAY,EAAE,sBAAClC,GAAD;AAAA,iBAAOD,YAAY,CAACC,GAAD,EAAM,QAAN,CAAnB;AAAA,SAH1B;AAIY,QAAA,KAAK,EAAEjB,SAAS,CAACJ,MAAV,GAAiB,EAJpC;AAKY,QAAA,WAAW,EAAC,QALxB;AAMY,QAAA,QAAQ,EAAEW;AANtB,QATJ,EAkBK6C,IAAI,CAACC,SAAL,CAAelD,UAAf,KAA8BiD,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B,GAAkD,MAAC,IAAD;AAAA,mBAAM,KAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAC;AAAtC,UAAN;AAAA,QAAlD,GACF,KAAC,MAAD;AACK,QAAA,aAAa,EAAErD,SAAS,CAACH,QAD9B;AAEK,QAAA,KAAK,EAAE,CAACZ,MAAM,CAACiE,KAAR,EAAe3C,UAAU,GAAGtB,MAAM,CAACkE,aAAV,GAA0B,IAAnD,CAFZ;AAGK,QAAA,aAAa,EAAE,uBAAClC,GAAD,EAAMqC,KAAN;AAAA,iBAActC,YAAY,CAACC,GAAD,EAAM,UAAN,CAA1B;AAAA,SAHpB;AAIK,QAAA,OAAO,EAAEV,UAJd;AAAA,kBAMUJ,UAAU,CAACoD,GAAX,CAAe,UAAC1D,QAAD,EAAWyD,KAAX;AAAA,iBAAmB,KAAC,MAAD,CAAQ,IAAR;AAAyB,YAAA,KAAK,EAAEzD,QAAhC;AAA0C,YAAA,KAAK,EAAEA;AAAjD,aAAkByD,KAAlB,CAAnB;AAAA,SAAf;AANV,QAnBH,EA4BI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACX,UAAAA,UAAU,EAAC,EAAZ;AAAgBa,UAAAA,QAAQ,EAAC;AAAzB,SAAb;AAAA,mBAA2C,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEvE,MAAM,CAAC8D,EAApB;AAAA;AAAA,UAA3C,OAAiF/C,SAAS,CAACF,IAAV,CAAe2D,kBAAf,CAAkC,OAAlC,CAAjF;AAAA,QA5BJ,EA6BKlD,UAAU,IAAE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAEtB,MAAM,CAACyE,QAAP,CAAgBC,KAA/B;AAAsC,QAAA,OAAO,EAAEtC,OAA/C;AAAA,kBAAwD,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACsC,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA;AAAA;AAAxD,QA7BjB;AAAA,MArBJ,EAuDSpD,UAAU,IAAI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEtB,MAAM,CAAC2D,gBAApB;AAAA,iBACX,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC3D,MAAM,CAAC4D,QAAR,EAAiB;AAACF,UAAAA,UAAU,EAAC;AAAZ,SAAjB,CAAb;AAAA,kBACI,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,SAAf;AAA0B,UAAA,OAAO,EAAED,aAAnC;AAAA;AAAA;AADJ,QADW,EAIX,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACzD,MAAM,CAAC4D,QAAR,CAAb;AAAA,kBACI,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,SAAf;AAA0B,UAAA,OAAO,EAAEnB,WAAnC;AAAA;AAAA;AADJ,QAJW;AAAA,MAvDvB;AAAA,IADA;AAoEH,CAnJD;;AAoJA,eAAenC,WAAf","sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { View, SafeAreaView ,TextInput , ActivityIndicator} from \"react-native\"\r\nimport {Picker} from '@react-native-picker/picker'\r\nimport { Text, Block, Button} from 'galio-framework'\r\nimport styles from '../../styles/styles'\r\nimport {DateTimePickerAndroid} from '@react-native-community/datetimepicker'\r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport DefaultCategories from '../../constantData/categories'\r\nimport {useRoute} from '@react-navigation/native';\r\nimport axiosInstance from '../../services/AxiosInstance'\r\nconst ItemDetails = (props)=>{\r\n    const route = useRoute();\r\n    const [formState, setFormState] = useState({\r\n        name:\"\",\r\n        description:\"\",\r\n        amount: 0,\r\n        category:\"\",\r\n        date: new Date()\r\n    })\r\n    const params = props.route.params\r\n    const [categories, setCategories]= useState([])\r\n    const [isDateOpen, setDateOpen] = useState(false)\r\n    const [isEditable, setEditable] = useState(false)\r\n    useEffect(()=>{\r\n    // display info\r\n     var data = props.route.params\r\n     data.date = new Date(data.date)\r\n    setFormState({...formState, ...data})\r\n    setCategories(route.name == \"Expense Details\" ? DefaultCategories.expenses:DefaultCategories.assets )\r\n    }, [])\r\n\r\n    const onDateChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate;\r\n        setFormState({...formState, date:currentDate});\r\n      };\r\n    \r\n    const handleChange = (val, field)=>{\r\n        if (field === \"amount\"){\r\n            if (isNaN(val)){\r\n                val = formState.amount\r\n            }else{\r\n                val = parseInt(val)\r\n            }\r\n        }\r\n        setFormState({\r\n            ...formState,\r\n            [field]:val\r\n        })\r\n    }\r\n    const getDate = ()=>{\r\n        DateTimePickerAndroid.open({\r\n            value:formState.date,\r\n            onChange:onDateChange,\r\n            mode:\"date\"\r\n        })\r\n    }\r\n\r\n    const saveChanges = ()=>{\r\n        if (formState.category && formState.date && formState.name && formState.amount && formState.description){\r\n            // validated\r\n            const type = route.name == \"Expense Details\"? \"Expenses\" : \"Assets\"\r\n            \r\n            axiosInstance.put(`${type.toLocaleLowerCase()}/${props.route.params._id}`, formState).then(res=>{\r\n                alert('Succesfully updated')\r\n            }).catch(e=>{\r\n                alert(\"not updated\")\r\n            })\r\n        }\r\n        console.log(formState)\r\n    }\r\n    const deleteItem = ()=>{\r\n        const type = route.name == \"Expense Details\"? \"Expenses\" : \"Assets\"\r\n\r\n        axiosInstance.delete(`${type.toLocaleLowerCase()}/${props.route.params._id}`).then(res=>{\r\n            alert('Succesfully deleted item')\r\n            props.navigation.navigate(\"Assets\")\r\n        }).catch(e=>{\r\n            console.log(e)\r\n            alert(\"not deleted\")\r\n        })\r\n    }\r\n\r\n    const cancelChanges = ()=>{\r\n\r\n    const data = props.route.params\r\n    setFormState({...formState, ...data})\r\n    setEditable(!isEditable)\r\n    }\r\n\r\n    return (\r\n    <View>\r\n        <View style={[{marginLeft:\"-4.5%\"} ]}>\r\n                <View style={styles.flexContainerRow}> \r\n                {!isEditable && <View style={[styles.flexItem]}> \r\n                <Button color={'#B82121'} style={{marginTop:\"7.5%\"}} onPress={()=>{\r\n                    deleteItem()\r\n                    }}>\r\n                        <View style={styles.flexContainerRow}> \r\n                            <AntDesign name=\"delete\" size={24} color=\"white\"  fontSize=\"large\"/>\r\n                            <Text style={styles.h2} color='white'>Delete</Text>\r\n                        </View>\r\n                    </Button></View>}\r\n                    {!isEditable && <View style={styles.flexItem}>\r\n                    <Button color={'#2885F4'} style={{marginTop:\"7.5%\"}} onPress={()=>{setEditable(!isEditable)}}>\r\n                        <View style={styles.flexContainerRow}> \r\n                            <AntDesign name=\"edit\" size={24} color=\"white\"  fontSize=\"large\"/>\r\n                            <Text style={styles.h2} color='white'>Edit</Text>\r\n                        </View>\r\n                    </Button></View>}\r\n                    </View>\r\n        </View>\r\n        <View style={{marginHorizontal:\"5%\", marginVertical:\"2%\"}}>\r\n            <TextInput \r\n                        style={[styles.input, isEditable ? styles.editableInput : null]}\r\n                        onChangeText={(val)=>handleChange(val, \"name\")}\r\n                        value={formState.name}\r\n                        placeholder=\"name\"\r\n                        editable={isEditable}\r\n            />\r\n           \r\n            <TextInput \r\n                        style={[styles.input, isEditable ? styles.editableInput : null]}\r\n                        keyboardType=\"numeric\"\r\n                        onChangeText={(val)=>handleChange(val, \"amount\")}\r\n                        value={formState.amount+\"\"}\r\n                        placeholder=\"amount\"\r\n                        editable={isEditable}\r\n\r\n            />\r\n           { JSON.stringify(categories) == JSON.stringify([])? <Text><ActivityIndicator size=\"small\" color=\"#0000ff\" />Loading Categories</Text>: \r\n           <Picker \r\n                selectedValue={formState.category} \r\n                style={[styles.input, isEditable ? styles.editableInput : null]}\r\n                onValueChange={(val, index)=>handleChange(val, \"category\")}\r\n                enabled={isEditable}\r\n                >\r\n                    {categories.map((category, index)=><Picker.Item key={index} label={category} value={category}/>)}\r\n            </Picker>}\r\n\r\n            <Text style={{marginLeft:15, fontSize:15}}><Text style={styles.h2}>Date:</Text> {formState.date.toLocaleDateString(\"en-us\")}</Text>\r\n            {isEditable&&<Button color={styles.btnBasic.color} onPress={getDate}><Text style={{color:\"black\"}}>Select Date</Text></Button>}\r\n            {/* {isDateOpen && <DateTimePicker mode=\"date\" value={formState.date} onChange={(val)=>{handleChange(val, 'date')}}/>} */}\r\n\r\n\r\n        </View>\r\n            {isEditable && <View style={styles.flexContainerRow}>\r\n                <View style={[styles.flexItem,{marginLeft:\"0.5%\"} ]}>\r\n                    <Button color={'#F42828'} onPress={cancelChanges}>Cancel Changes</Button>\r\n                </View>\r\n                <View style={[styles.flexItem, ]}>\r\n                    <Button color={'#21B855'} onPress={saveChanges}>Save Changes</Button>\r\n                </View>\r\n            \r\n            </View>\r\n            }\r\n        \r\n    </View>)\r\n}\r\nexport default ItemDetails\r\n"]},"metadata":{},"sourceType":"module"}