{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Text, Block, Button } from 'galio-framework';\nimport { AntDesign } from '@expo/vector-icons';\nimport axiosInstance from \"../../services/AxiosInstance\";\nimport styles from \"../../styles/styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createUser } from \"../../firebase/fb-users\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSignIn = _useState6[0],\n      setForSignIn = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      processing = _useState8[0],\n      setProcessing = _useState8[1];\n\n  var handleChange = function handleChange(val, field) {\n    if (field == \"username\") {\n      setUsername(val);\n    } else {\n      setPassword(val);\n    }\n  };\n\n  var createUser = function createUser() {\n    if (username && password) {\n      setProcessing(true);\n      axiosInstance.post('/users/', {\n        username: username,\n        password: password\n      }).then(function (res) {\n        setProcessing(false);\n        Alert.alert(\"User created please sign in\");\n        setForSignIn(!isSignIn);\n        props.reloadApp();\n      }).catch(function (e) {\n        Alert.alert(e.response.data.error);\n        setProcessing(false);\n      });\n    }\n  };\n\n  var signInUser = function signInUser() {\n    if (username && password) {\n      setProcessing(true);\n      axiosInstance.post('/users/signin', {\n        username: username,\n        password: password\n      }).then(function (res) {\n        setProcessing(false);\n        AsyncStorage.setItem('x-auth-token', res.data['x-auth-token']).then(function (res) {\n          props.reloadApp();\n        });\n      }).catch(function (e) {\n        Alert.alert(e.response.data.error);\n        setProcessing(false);\n      });\n    }\n  };\n\n  useEffect(function () {\n    var f = function _callee() {\n      var x;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token1'));\n\n            case 2:\n              x = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    f();\n  }, []);\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.flexContainerColumn,\n      children: [_jsx(Block, {\n        style: [{\n          marginTop: \"10%\",\n          marginHorizontal: \"10%\"\n        }, styles.container],\n        children: _jsx(Text, {\n          h1: true,\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"BudgetHero\"\n        })\n      }), _jsxs(Block, {\n        style: [styles.container, {\n          marginTop: \"5%\",\n          marginHorizontal: \"10%\",\n          backgroundColor: \"#BEC4F0\"\n        }],\n        children: [_jsx(Text, {\n          h4: true,\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Connect to get started\"\n        }), _jsxs(View, {\n          style: [styles.flexContainerRow, {\n            marginLeft: \"5%\"\n          }],\n          children: [_jsx(View, {\n            style: styles.flexItem,\n            children: _jsx(Text, {\n              style: [styles.h2],\n              children: \"SignIn\"\n            })\n          }), _jsx(View, {\n            style: [styles.flexItem, {\n              marginRight: \"50%\",\n              marginTop: \"-3%\"\n            }],\n            children: _jsx(Switch, {\n              value: isSignIn,\n              onChange: function onChange() {\n                return setForSignIn(!isSignIn);\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: [styles.flexContainerRow, {\n            marginHorizontal: \"10%\"\n          }],\n          children: [_jsx(View, {\n            style: {\n              marginTop: \"5%\"\n            },\n            children: _jsx(Text, {\n              style: styles.h2,\n              children: \"Username:\"\n            })\n          }), _jsx(TextInput, {\n            style: [styles.flexItem, styles.input, styles.editableInput, {\n              width: \"100%\"\n            }],\n            onChangeText: function onChangeText(val) {\n              return handleChange(val, \"username\");\n            },\n            value: username,\n            placeholder: \"username\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.flexContainerRow, {\n            marginHorizontal: \"10%\"\n          }],\n          children: [_jsx(View, {\n            style: {\n              marginTop: \"5%\"\n            },\n            children: _jsx(Text, {\n              style: styles.h2,\n              children: \"Password:\"\n            })\n          }), _jsx(TextInput, {\n            style: [styles.flexItem, styles.input, styles.editableInput, {\n              width: \"100%\"\n            }],\n            onChangeText: function onChangeText(val) {\n              return handleChange(val, \"password\");\n            },\n            value: password,\n            placeholder: \"Password\",\n            secureTextEntry: true\n          })]\n        }), _jsx(View, {\n          style: {\n            marginLeft: \"21.5%\"\n          },\n          children: processing ? _jsx(ActivityIndicator, {}) : isSignIn ? _jsx(Button, {\n            color: \"darkorange\",\n            onPress: signInUser,\n            children: \"Sign In\"\n          }) : _jsx(Button, {\n            onPress: createUser,\n            children: \"Sign Up\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["E:/Documents/Semester 7/MAD/Project/client/components/Login/Login.jsx"],"names":["React","useState","useEffect","Text","Block","Button","AntDesign","axiosInstance","styles","AsyncStorage","createUser","Login","props","username","setUsername","password","setPassword","isSignIn","setForSignIn","processing","setProcessing","handleChange","val","field","post","then","res","Alert","alert","reloadApp","catch","e","response","data","error","signInUser","setItem","f","getItem","x","flexContainerColumn","marginTop","marginHorizontal","container","textAlign","backgroundColor","flexContainerRow","marginLeft","flexItem","h2","marginRight","input","editableInput","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,SAAQC,UAAR;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAS;AACnB,kBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAiCf,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAoCjB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAOC,KAAP,EAAe;AAChC,QAAIA,KAAK,IAAI,UAAb,EAAwB;AACpBT,MAAAA,WAAW,CAACQ,GAAD,CAAX;AACH,KAFD,MAEK;AACDN,MAAAA,WAAW,CAACM,GAAD,CAAX;AACH;AACJ,GAND;;AAOA,MAAMZ,UAAU,GAAG,SAAbA,UAAa,GAAI;AAEtB,QAAIG,QAAQ,IAAIE,QAAhB,EAAyB;AACtBK,MAAAA,aAAa,CAAC,IAAD,CAAb;AAEAb,MAAAA,aAAa,CAACiB,IAAd,CAAmB,SAAnB,EAA8B;AAACX,QAAAA,QAAQ,EAARA,QAAD;AAAWE,QAAAA,QAAQ,EAARA;AAAX,OAA9B,EAAoDU,IAApD,CAAyD,UAAAC,GAAG,EAAE;AAC1DN,QAAAA,aAAa,CAAC,KAAD,CAAb;AAEAO,QAAAA,KAAK,CAACC,KAAN,CAAY,6BAAZ;AACAV,QAAAA,YAAY,CAAC,CAACD,QAAF,CAAZ;AACAL,QAAAA,KAAK,CAACiB,SAAN;AAEH,OAPD,EAOGC,KAPH,CAOS,UAAAC,CAAC,EAAE;AACRJ,QAAAA,KAAK,CAACC,KAAN,CAAYG,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,KAA5B;AACAd,QAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,OAXD;AAYF;AACD,GAlBD;;AAoBA,MAAMe,UAAU,GAAG,SAAbA,UAAa,GAAI;AACnB,QAAItB,QAAQ,IAAIE,QAAhB,EAAyB;AACrBK,MAAAA,aAAa,CAAC,IAAD,CAAb;AAEAb,MAAAA,aAAa,CAACiB,IAAd,CAAmB,eAAnB,EAAoC;AAACX,QAAAA,QAAQ,EAARA,QAAD;AAAWE,QAAAA,QAAQ,EAARA;AAAX,OAApC,EAA0DU,IAA1D,CAA+D,UAAAC,GAAG,EAAE;AAChEN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAX,QAAAA,YAAY,CAAC2B,OAAb,CAAqB,cAArB,EAAqCV,GAAG,CAACO,IAAJ,CAAS,cAAT,CAArC,EAA+DR,IAA/D,CAAoE,UAAAC,GAAG,EAAE;AACrEd,UAAAA,KAAK,CAACiB,SAAN;AAEH,SAHD;AAIH,OAND,EAMGC,KANH,CAMS,UAAAC,CAAC,EAAE;AACRJ,QAAAA,KAAK,CAACC,KAAN,CAAYG,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,KAA5B;AACAd,QAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,OAVD;AAYH;AACD,GAjBJ;;AAkBAlB,EAAAA,SAAS,CAAE,YAAI;AAEX,QAAMmC,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEM5B,YAAY,CAAC6B,OAAb,CAAqB,QAArB,CAFN;;AAAA;AAEJC,cAAAA,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAKHF,IAAAA,CAAC;AACD,GARQ,EAQP,EARO,CAAT;AASA,SAAQ,KAAC,YAAD;AAAA,cACJ,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE7B,MAAM,CAACgC,mBAApB;AAAA,iBAEI,KAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,SAAS,EAAC,KAAX;AAAkBC,UAAAA,gBAAgB,EAAC;AAAnC,SAAD,EAA4ClC,MAAM,CAACmC,SAAnD,CAAd;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,EAAE,MAAR;AAAS,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAAhB;AAAA;AAAA;AADJ,QAFJ,EAMI,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAEpC,MAAM,CAACmC,SAAT,EAAmB;AAACF,UAAAA,SAAS,EAAC,IAAX;AAAiBC,UAAAA,gBAAgB,EAAC,KAAlC;AAAyCG,UAAAA,eAAe,EAAC;AAAzD,SAAnB,CAAd;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,EAAE,MAAR;AAAS,UAAA,KAAK,EAAE;AAACD,YAAAA,SAAS,EAAC;AAAX,WAAhB;AAAA;AAAA,UADJ,EAEI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACpC,MAAM,CAACsC,gBAAR,EAA0B;AAACC,YAAAA,UAAU,EAAC;AAAZ,WAA1B,CAAb;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEvC,MAAM,CAACwC,QAApB;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE,CAACxC,MAAM,CAACyC,EAAR,CAAb;AAAA;AAAA;AADJ,YADJ,EAII,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE,CAACzC,MAAM,CAACwC,QAAR,EAAkB;AAACE,cAAAA,WAAW,EAAC,KAAb;AAAoBT,cAAAA,SAAS,EAAC;AAA9B,aAAlB,CAAb;AAAA,sBACI,KAAC,MAAD;AAAQ,cAAA,KAAK,EAAExB,QAAf;AAAyB,cAAA,QAAQ,EAAE;AAAA,uBAAIC,YAAY,CAAC,CAACD,QAAF,CAAhB;AAAA;AAAnC;AADJ,YAJJ;AAAA,UAFJ,EAWI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACT,MAAM,CAACsC,gBAAR,EAA0B;AAACJ,YAAAA,gBAAgB,EAAC;AAAlB,WAA1B,CAAb;AAAA,qBACQ,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACD,cAAAA,SAAS,EAAC;AAAX,aAAb;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEjC,MAAM,CAACyC,EAApB;AAAA;AAAA;AADJ,YADR,EAIQ,KAAC,SAAD;AACQ,YAAA,KAAK,EAAE,CAACzC,MAAM,CAACwC,QAAR,EAAiBxC,MAAM,CAAC2C,KAAxB,EAAgC3C,MAAM,CAAC4C,aAAvC,EAAuD;AAACC,cAAAA,KAAK,EAAC;AAAP,aAAvD,CADf;AAEQ,YAAA,YAAY,EAAE,sBAAC/B,GAAD;AAAA,qBAAOD,YAAY,CAACC,GAAD,EAAM,UAAN,CAAnB;AAAA,aAFtB;AAGQ,YAAA,KAAK,EAAET,QAHf;AAIQ,YAAA,WAAW,EAAC;AAJpB,YAJR;AAAA,UAXJ,EAuBI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACL,MAAM,CAACsC,gBAAR,EAA0B;AAACJ,YAAAA,gBAAgB,EAAC;AAAlB,WAA1B,CAAb;AAAA,qBACQ,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACD,cAAAA,SAAS,EAAC;AAAX,aAAb;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEjC,MAAM,CAACyC,EAApB;AAAA;AAAA;AADJ,YADR,EAIQ,KAAC,SAAD;AACQ,YAAA,KAAK,EAAE,CAACzC,MAAM,CAACwC,QAAR,EAAiBxC,MAAM,CAAC2C,KAAxB,EAAgC3C,MAAM,CAAC4C,aAAvC,EAAuD;AAACC,cAAAA,KAAK,EAAC;AAAP,aAAvD,CADf;AAEQ,YAAA,YAAY,EAAE,sBAAC/B,GAAD;AAAA,qBAAOD,YAAY,CAACC,GAAD,EAAM,UAAN,CAAnB;AAAA,aAFtB;AAGQ,YAAA,KAAK,EAAEP,QAHf;AAIQ,YAAA,WAAW,EAAC,UAJpB;AAKQ,YAAA,eAAe,EAAE;AALzB,YAJR;AAAA,UAvBJ,EAoCI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACgC,YAAAA,UAAU,EAAC;AAAZ,WAAb;AAAA,oBACK5B,UAAU,GAAC,KAAC,iBAAD,KAAD,GAAsBF,QAAQ,GAAE,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,YAAd;AAA2B,YAAA,OAAO,EAAEkB,UAApC;AAAA;AAAA,YAAF,GAAoE,KAAC,MAAD;AAAQ,YAAA,OAAO,EAAEzB,UAAjB;AAAA;AAAA;AADjH,UApCJ;AAAA,QANJ;AAAA;AADI,IAAR;AAkDH,CA7GD;;AA8GA,eAAeC,KAAf","sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { View, SafeAreaView, TextInput  , Switch, Alert, ActivityIndicator} from \"react-native\"\r\nimport { Text, Block,Button } from 'galio-framework'\r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport axiosInstance from '../../services/AxiosInstance'\r\nimport styles from '../../styles/styles'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nimport {createUser} from '../../firebase/fb-users'\r\n\r\nconst Login = (props)=>{\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isSignIn, setForSignIn] = useState(false)\r\n    const [processing, setProcessing] = useState(false)\r\n    const handleChange = (val , field)=>{\r\n        if (field == \"username\"){\r\n            setUsername(val)\r\n        }else{\r\n            setPassword(val)\r\n        }\r\n    }\r\n    const createUser = ()=>{\r\n\r\n     if (username && password){\r\n        setProcessing(true)\r\n\r\n        axiosInstance.post('/users/', {username, password}).then(res=>{\r\n            setProcessing(false)\r\n\r\n            Alert.alert(\"User created please sign in\")\r\n            setForSignIn(!isSignIn)\r\n            props.reloadApp()\r\n\r\n        }).catch(e=>{\r\n            Alert.alert(e.response.data.error)\r\n            setProcessing(false)\r\n\r\n        })\r\n     }\r\n    }\r\n    \r\n    const signInUser = ()=>{\r\n        if (username && password){\r\n            setProcessing(true)\r\n\r\n            axiosInstance.post('/users/signin', {username, password}).then(res=>{\r\n                setProcessing(false)\r\n                AsyncStorage.setItem('x-auth-token', res.data['x-auth-token']).then(res=>{\r\n                    props.reloadApp()\r\n\r\n                })\r\n            }).catch(e=>{\r\n                Alert.alert(e.response.data.error)\r\n                setProcessing(false)\r\n\r\n            })\r\n           \r\n        }\r\n       }\r\n    useEffect( ()=>{\r\n        // await AsyncStorage.setItem('token1', 'asdasd')\r\n        const f = async ()=>{\r\n        // await AsyncStorage.setItem('token1', 'asdasd')\r\n        const x = await AsyncStorage.getItem('token1')\r\n        \r\n    }\r\n     f()   \r\n    },[])\r\n    return (<SafeAreaView >\r\n        <View style={styles.flexContainerColumn} >\r\n            \r\n            <Block style={[{marginTop:\"10%\", marginHorizontal:\"10%\"}, styles.container]}>\r\n                <Text h1 style={{textAlign:\"center\"}}>BudgetHero</Text>\r\n            </Block> \r\n\r\n            <Block style={[ styles.container,{marginTop:\"5%\", marginHorizontal:\"10%\", backgroundColor:\"#BEC4F0\"},]}>\r\n                <Text h4 style={{textAlign:\"center\"}}>Connect to get started</Text>\r\n                <View style={[styles.flexContainerRow, {marginLeft:\"5%\"}]}>\r\n                    <View style={styles.flexItem}>\r\n                        <Text style={[styles.h2]}>SignIn</Text>\r\n                    </View>\r\n                    <View style={[styles.flexItem, {marginRight:\"50%\", marginTop:\"-3%\"}]}>\r\n                        <Switch value={isSignIn} onChange={()=>setForSignIn(!isSignIn)} />\r\n                    </View>\r\n                </View>\r\n                \r\n                <View style={[styles.flexContainerRow, {marginHorizontal:\"10%\",}]}>\r\n                        <View style={{marginTop:\"5%\"}}>\r\n                            <Text style={styles.h2}>Username:</Text>\r\n                        </View>\r\n                        <TextInput  \r\n                                style={[styles.flexItem,styles.input,  styles.editableInput , {width:\"100%\"}]}\r\n                                onChangeText={(val)=>handleChange(val, \"username\")}\r\n                                value={username}\r\n                                placeholder=\"username\"\r\n                                                               \r\n                         />\r\n                </View> \r\n                <View style={[styles.flexContainerRow, {marginHorizontal:\"10%\",}]}>\r\n                        <View style={{marginTop:\"5%\"}}>\r\n                            <Text style={styles.h2}>Password:</Text>\r\n                        </View>\r\n                        <TextInput  \r\n                                style={[styles.flexItem,styles.input,  styles.editableInput , {width:\"100%\"}]}\r\n                                onChangeText={(val)=>handleChange(val, \"password\")}\r\n                                value={password}\r\n                                placeholder=\"Password\"\r\n                                secureTextEntry={true}\r\n                                                               \r\n                         />\r\n                </View>\r\n                <View style={{marginLeft:\"21.5%\"}}>\r\n                    {processing?<ActivityIndicator/>:isSignIn ?<Button color=\"darkorange\" onPress={signInUser}>Sign In</Button> :<Button onPress={createUser}>Sign Up</Button> }\r\n                </View> \r\n                \r\n            </Block> \r\n        </View>\r\n    </SafeAreaView>)\r\n}\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}