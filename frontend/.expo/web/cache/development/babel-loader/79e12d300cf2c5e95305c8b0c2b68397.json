{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"../../styles/styles\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport axiosInstance from \"../../services/AxiosInstance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CashSpentChart = function CashSpentChart() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      labels = _useState4[0],\n      setLabels = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  useEffect(function () {\n    axiosInstance.get(\"/stats/spent\").then(function (res) {\n      var filteredData = {\n        dates: {}\n      };\n      res.data.map(function (item) {\n        var jsDateString = new Date(item.date).toLocaleDateString(\"en-us\");\n\n        if (filteredData.dates.hasOwnProperty(jsDateString)) {\n          filteredData.dates[jsDateString] += item.amount;\n        } else {\n          filteredData.dates[jsDateString] = item.amount;\n        }\n      });\n      setLabels(Object.keys(filteredData.dates));\n      setData(Object.values(filteredData.dates));\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(e);\n    });\n  }, []);\n\n  var dataExists = function dataExists() {\n    return JSON.stringify(data) != JSON.stringify([]) && JSON.stringify(labels) != JSON.stringify([]);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.card,\n    children: loading ? _jsx(ActivityIndicator, {}) : dataExists() ? _jsx(LineChart, {\n      style: {\n        width: \"90%\"\n      },\n      data: {\n        labels: labels,\n        datasets: [{\n          data: data\n        }]\n      },\n      width: Dimensions.get(\"window\").width * 0.8,\n      height: 220,\n      yAxisLabel: \"\",\n      yAxisSuffix: \"k\",\n      yAxisInterval: 1,\n      chartConfig: {\n        backgroundColor: \"#e26a00\",\n        backgroundGradientFrom: \"#fb8c00\",\n        backgroundGradientTo: \"#ffa726\",\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#ffa726\"\n        }\n      },\n      bezier: true,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    }) : _jsx(Text, {\n      children: \"No data\"\n    })\n  });\n};\n\nexport default CashSpentChart;","map":{"version":3,"sources":["E:/Documents/Semester 7/MAD/Project/client/components/Stats/CashSpentChart.jsx"],"names":["useEffect","useState","styles","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","axiosInstance","CashSpentChart","data","setData","labels","setLabels","loading","setLoading","get","then","res","filteredData","dates","map","item","jsDateString","Date","date","toLocaleDateString","hasOwnProperty","amount","Object","keys","values","catch","e","console","log","dataExists","JSON","stringify","card","width","datasets","Dimensions","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {View, SafeAreaView, Dimensions, ActivityIndicator, Text} from 'react-native'\r\nimport styles from '../../styles/styles'\r\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n  } from \"react-native-chart-kit\";\r\n  import axiosInstance from '../../services/AxiosInstance'\r\n\r\nconst CashSpentChart = ()=>{\r\n    const [data, setData] = useState([])\r\n    // const [filteredData, setFilteredData] = useState({})\r\n    const [labels, setLabels] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(()=>{\r\n    \r\n        axiosInstance.get(\"/stats/spent\").then(res=>{\r\n            let filteredData = {\r\n                dates: {\r\n             },\r\n                \r\n            }\r\n            res.data.map(item=>{\r\n                const jsDateString= new Date(item.date).toLocaleDateString(\"en-us\")\r\n\r\n                if(filteredData.dates.hasOwnProperty(jsDateString)){\r\n                    filteredData.dates[jsDateString] += item.amount\r\n                }else{\r\n                    filteredData.dates[jsDateString] = item.amount\r\n                }\r\n\r\n            })\r\n            setLabels(Object.keys(filteredData.dates))\r\n            setData(Object.values(filteredData.dates))\r\n            setLoading(false)\r\n        }).catch(e=>{\r\n            console.log(e)\r\n        })\r\n    },[])\r\n    const dataExists = ()=>{\r\n        return JSON.stringify(data) != JSON.stringify([]) && JSON.stringify(labels)!=JSON.stringify([]) \r\n    }\r\n    return (\r\n       <SafeAreaView style={styles.card}> \r\n        {loading? <ActivityIndicator />: dataExists()? <LineChart\r\n                style={{width:\"90%\", }}\r\n                data={{\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                    data:data\r\n                    }\r\n                ]\r\n                }} \r\n                \r\n                width={Dimensions.get(\"window\").width*0.8} // from react-native\r\n                height={220}\r\n                yAxisLabel=\"\"\r\n                yAxisSuffix=\"k\"\r\n                yAxisInterval={1} // optional, defaults to 1\r\n                chartConfig={{\r\n                backgroundColor: \"#e26a00\",\r\n                backgroundGradientFrom: \"#fb8c00\",\r\n                backgroundGradientTo: \"#ffa726\",\r\n                decimalPlaces: 2, // optional, defaults to 2dp\r\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                style: {\r\n                    borderRadius: 16\r\n                },\r\n                propsForDots: {\r\n                    r: \"6\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#ffa726\"\r\n                }\r\n                }}\r\n                    bezier\r\n                    style={{\r\n                    marginVertical: 8,\r\n                    borderRadius: 16\r\n                    }}\r\n            />:<Text>No data</Text> }\r\n        </SafeAreaView>        \r\n\r\n    )\r\n}\r\nexport default CashSpentChart"]},"metadata":{},"sourceType":"module"}