{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { numberWithCommas } from \"../common\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar PieChart = function (_React$Component) {\n  _inherits(PieChart, _React$Component);\n\n  var _super = _createSuper(PieChart);\n\n  function PieChart(props) {\n    var _this;\n\n    _classCallCheck(this, PieChart);\n\n    _this = _super.call(this, props);\n    _this.drawPie = _this.drawPie.bind(_assertThisInitialized(_this));\n    _this.initData = _this.initData.bind(_assertThisInitialized(_this));\n    _this.handleEvent = _this.handleEvent.bind(_assertThisInitialized(_this));\n    _this.state = {\n      pieSize: [],\n      piePos: [],\n      oldPiePos: [],\n      pieIndex: [],\n      dataSum: 0,\n      currentPieIdx: -1,\n      evtX: 0,\n      evtY: 0,\n      selectedIndex: -1,\n      labels: [],\n      colors: []\n    };\n    return _this;\n  }\n\n  _createClass(PieChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initData(this.props.data);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.data !== this.props.data) {\n        this.initData(nextProps.data);\n      }\n    }\n  }, {\n    key: \"initData\",\n    value: function initData(data) {\n      var colors = [];\n      var labels = [];\n\n      if (data[0].color) {\n        for (var i = 0; i < data.length; i++) {\n          colors[i] = data[i].color;\n        }\n      } else {\n        for (var _i = 0; _i < data.length; _i++) {\n          colors[_i] = this.props.colors[_i % this.props.colors.length];\n        }\n\n        if (data.length === this.props.colors.length + 1) {\n          colors[data.length - 1] = this.props.colors[3];\n        }\n      }\n\n      if (data[0].label) {\n        for (var _i2 = 0; _i2 < data.length; _i2++) {\n          labels[_i2] = data[_i2].label;\n        }\n      } else {\n        for (var _i3 = 0; _i3 < data.length; _i3++) {\n          labels[_i3] = null;\n        }\n      }\n\n      var sum = 0;\n\n      for (var _i4 = 0; _i4 < data.length; _i4++) {\n        sum += data[_i4].value;\n      }\n\n      var pieSize = [];\n      var pieIndex = [];\n      var angles = [];\n      var index = 0;\n      var tempAngle = 0;\n\n      for (var _i5 = 0; _i5 < data.length; _i5++) {\n        var angle = Math.round(data[_i5].value / sum * 360);\n        angles.push(tempAngle + angle);\n        tempAngle = tempAngle + angle;\n\n        if (data[_i5].value / sum * 2 * Math.PI > Math.PI) {\n          pieIndex.push(index);\n          pieIndex.push(index);\n          pieSize.push(Math.PI);\n          pieSize.push(data[_i5].value / sum * 2 * Math.PI - Math.PI);\n        } else {\n          pieIndex.push(index);\n          pieSize.push(data[_i5].value / sum * 2 * Math.PI);\n        }\n\n        index++;\n      }\n\n      var piePos = [];\n      piePos[0] = 0;\n\n      for (var _i6 = 1; _i6 < pieSize.length; _i6++) {\n        piePos[_i6] = piePos[_i6 - 1] + pieSize[_i6 - 1];\n      }\n\n      var oldPiePos = [];\n\n      for (var _i7 = 0; _i7 < this.props.data.length; _i7++) {\n        oldPiePos[_i7] = -1;\n      }\n\n      for (var _i8 = 0; _i8 < piePos.length; _i8++) {\n        if (oldPiePos[pieIndex[_i8]] === -1) {\n          oldPiePos[pieIndex[_i8]] = piePos[_i8];\n        }\n      }\n\n      this.setState({\n        labels: labels,\n        colors: colors,\n        pieSize: pieSize,\n        piePos: piePos,\n        selectedIndex: -1,\n        pieIndex: pieIndex,\n        angles: angles,\n        dataSum: sum,\n        oldPiePos: oldPiePos\n      });\n    }\n  }, {\n    key: \"handleEventOld\",\n    value: function handleEventOld(evt) {\n      var _this2 = this;\n\n      var pageX = evt.nativeEvent.pageX;\n      var pageY = evt.nativeEvent.pageY;\n      var angles = this.state.angles;\n      var size = this.props.size;\n      this.refs.test.measure(function (fx, fy, width, height, px, py) {\n        var evtX = pageX - px;\n        var evtY = pageY - py;\n        var originX = pageX - px - size / 2;\n        var originY = size / 2 - (pageY - py);\n        var rSquare = Math.pow(originX, 2) + Math.pow(originY, 2);\n        var dx = originX;\n        var dy = -1 * originY;\n        var rad = Math.atan2(dy, dx);\n        var degree = rad * 180 / Math.PI;\n        if (degree < 0) degree = 360 + degree;\n        var inPie = rSquare < Math.pow(size / 2, 2);\n        var selectedIndex = -1;\n\n        if (inPie) {\n          for (var i = 0; i < angles.length; i++) {\n            if (degree < angles[i]) {\n              selectedIndex = i;\n              break;\n            }\n          }\n        }\n\n        _this2.setState({\n          evtX: evtX,\n          evtY: evtY,\n          originX: originX,\n          originY: originY,\n          inPie: inPie,\n          selectedAngle: degree,\n          selectedRad: rad,\n          selectedIndex: selectedIndex\n        });\n      });\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(idx) {\n      this.setState({\n        currentPieIdx: this.state.pieIndex[idx]\n      });\n    }\n  }, {\n    key: \"handleEventBak\",\n    value: function handleEventBak(evt, idx) {\n      var _this3 = this;\n\n      var pageX = evt.nativeEvent.pageX;\n      var pageY = evt.nativeEvent.pageY;\n      this.setState({\n        currentPieIdx: idx\n      });\n      this.refs.test.measure(function (fx, fy, width, height, px, py) {\n        _this3.setState({\n          evtX: pageX - px,\n          evtY: pageY - py\n        });\n      });\n    }\n  }, {\n    key: \"drawInfoOld\",\n    value: function drawInfoOld(x, y) {\n      var size = this.props.size;\n      var dist = Math.pow(Math.pow(x, 2) + Math.pow(y, 2), 0.5);\n\n      if (dist <= size) {\n        var index = -1;\n        var pos = x > 0 ? Math.PI / 2 - Math.asin(y / dist) : Math.PI * 3 / 2 + Math.asin(y / dist);\n\n        for (var i = 0; i < this.state.piePos.length; i++) {\n          if (this.state.piePos[i] > pos) break;\n          index++;\n        }\n\n        var marginLeft = x;\n        var marginTop = -y;\n        return _jsx(View, {\n          style: {\n            width: 100,\n            height: 80,\n            marginLeft: marginLeft,\n            marginTop: marginTop\n          },\n          children: _jsxs(Text, {\n            children: [Math.round(this.state.pieSize[index] / (2 * Math.PI) * 10000) / 100 + '\\n' + this.state.value[index], \" \"]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"drawInfoT\",\n    value: function drawInfoT(index) {\n      var size = this.props.size;\n      var pos = (this.state.oldPiePos[index] + this.state.oldPiePos[(index + 1) % this.state.oldPiePos.length]) / 2;\n\n      if (index + 1 === this.props.data.length) {\n        pos += Math.PI;\n      }\n\n      var x = size / 4 * Math.cos(-pos) + size / 2;\n      var y = -size / 4 * Math.sin(-pos) + size / 2;\n\n      if (index !== -1) {\n        var percentage = Math.round(this.props.data[index].value * 1000 / this.state.dataSum) / 10 + '%';\n        var valueStr = numberWithCommas(this.props.data[index].value, false);\n        return _jsx(View, {\n          style: {\n            height: size\n          },\n          children: _jsxs(View, {\n            style: {\n              marginLeft: x - 60,\n              marginTop: y - 40,\n              borderWidth: 1,\n              borderRadius: 5,\n              padding: 5,\n              borderColor: '#e0e0e0',\n              backgroundColor: '#FFFFFF'\n            },\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                paddingLeft: 5,\n                alignItems: 'center'\n              },\n              children: [_jsx(View, {\n                style: {\n                  width: 10,\n                  height: 5,\n                  marginRight: 3,\n                  borderRadius: 2,\n                  backgroundColor: this.state.colors[index]\n                }\n              }), _jsx(Text, {\n                style: styles.tooltipTitle,\n                children: this.state.labels[index] ? this.state.labels[index] : valueStr\n              })]\n            }), _jsx(Text, {\n              style: styles.tooltipValue,\n              children: this.state.labels[index] ? valueStr + \" (\" + percentage + \")\" : percentage\n            })]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"drawInfo\",\n    value: function drawInfo(index, x, y) {\n      var size = this.props.size;\n\n      if (index !== -1) {\n        return _jsx(View, {\n          style: {\n            width: size,\n            height: size\n          },\n          children: _jsxs(View, {\n            style: {\n              width: 60,\n              height: 80,\n              marginLeft: x - 30,\n              marginTop: y - 40,\n              borderWidth: 2,\n              borderRadius: 5,\n              borderColor: '#e0e0e0',\n              backgroundColor: '#FFFFFF'\n            },\n            children: [this.state.labels[index] !== null && _jsx(Text, {\n              children: this.state.labels[index]\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                paddingLeft: 5,\n                alignItems: 'center'\n              },\n              children: [_jsx(View, {\n                style: {\n                  width: 10,\n                  height: 5,\n                  marginRight: 3,\n                  borderRadius: 2,\n                  backgroundColor: this.state.colors[index]\n                }\n              }), _jsx(Text, {\n                style: styles.tooltipValue,\n                children: this.props.data[index].value\n              })]\n            }), _jsx(Text, {\n              style: styles.tooltipValue,\n              children: this.props.data[index].value * 100 / this.state.dataSum + '%'\n            })]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"getTransform\",\n    value: function getTransform(rad, width) {\n      var add = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var x = (0 - width / 2) * Math.cos(rad) - (0 - width / 2) * Math.sin(rad);\n      var y = (0 - width / 2) * Math.sin(rad) + (0 - width / 2) * Math.cos(rad);\n      return [{\n        translateX: -1 * x - width / 2 + add\n      }, {\n        translateY: -1 * y - width / 2\n      }, {\n        rotate: rad + 'rad'\n      }];\n    }\n  }, {\n    key: \"drawPie\",\n    value: function drawPie(angle, color, big, idx) {\n      var size = this.props.size;\n      return _jsx(View, {\n        children: angle === 0 ? _jsx(View, {}) : angle > 1 / 2 * Math.PI ? _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              width: size,\n              height: size / 2\n            }\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              backgroundColor: 'transparent'\n            },\n            children: [_jsx(View, {\n              style: {\n                width: size / 2,\n                height: size / 2,\n                transform: this.getTransform(Math.PI / 2, size / 2, size / 2)\n              },\n              children: _jsx(View, {\n                style: {},\n                children: this.drawPie(angle - 1 / 2 * Math.PI, color, false, idx)\n              })\n            }), _jsx(View, {\n              style: {\n                opacity: 1,\n                width: size / 2,\n                height: size / 2\n              },\n              children: this.drawPie(1 / 2 * Math.PI, color, false, idx)\n            })]\n          })]\n        }) : big ? _jsxs(View, {\n          style: {\n            width: size,\n            height: size\n          },\n          children: [_jsx(View, {\n            style: {\n              width: size,\n              height: size / 2\n            }\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: [_jsx(View, {\n              style: {\n                width: size / 2,\n                height: size / 2\n              }\n            }), _jsx(View, {\n              style: {\n                width: size / 2,\n                height: size / 2\n              },\n              children: _jsx(View, {\n                style: {\n                  width: size / 2,\n                  height: size / 2,\n                  borderBottomRightRadius: size / 2,\n                  backgroundColor: color,\n                  transform: this.getTransform(angle - Math.PI / 2, size / 2)\n                }\n              })\n            })]\n          })]\n        }) : _jsx(View, {\n          style: {\n            width: size / 2,\n            height: size / 2\n          },\n          children: _jsx(View, {\n            style: {\n              width: size / 2,\n              height: size / 2\n            },\n            children: _jsx(View, {\n              style: {\n                width: size / 2,\n                height: size / 2,\n                borderBottomRightRadius: size / 2,\n                backgroundColor: color,\n                borderWidth: 0,\n                borderColor: color,\n                transform: this.getTransform(angle - Math.PI / 2, size / 2)\n              }\n            })\n          })\n        })\n      });\n    }\n  }, {\n    key: \"drawT\",\n    value: function drawT() {\n      var pies = [];\n      if (this.state.pieSize.length === 0) return null;\n\n      for (var i = 0; i < this.state.pieSize.length; i++) {\n        pies.push(_jsx(View, {\n          style: {\n            transform: [{\n              rotate: this.state.piePos[i] + \"rad\"\n            }],\n            position: 'absolute'\n          },\n          children: this.drawPie(this.state.pieSize[i], this.state.colors[this.state.pieIndex[i]], true, i)\n        }, \"t\" + i));\n      }\n\n      return pies;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          selectedIndex = _this$state.selectedIndex,\n          locationX = _this$state.locationX,\n          locationY = _this$state.locationY,\n          evtX = _this$state.evtX,\n          evtY = _this$state.evtY,\n          inPie = _this$state.inPie,\n          selectedAngle = _this$state.selectedAngle,\n          pieSize = _this$state.pieSize,\n          angles = _this$state.angles;\n      var size = this.props.size;\n      return _jsx(View, {\n        collapsable: false,\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress(e) {\n            _this4.handleEventOld(e);\n          },\n          children: _jsxs(View, {\n            ref: \"test\",\n            style: StyleSheet.flatten([styles.container, {\n              width: size,\n              height: size\n            }]),\n            children: [this.drawT(), this.drawInfoT(this.state.selectedIndex)]\n          })\n        })\n      });\n    }\n  }]);\n\n  return PieChart;\n}(React.Component);\n\nPieChart.defaultProps = {\n  data: [{\n    value: 10\n  }, {\n    value: 20\n  }, {\n    value: 40\n  }, {\n    value: 100\n  }],\n  colors: ['#009ef2', '#ff4d7d', '#00c4c3', '#ffd12f', '#e7e9ed'],\n  size: 200\n};\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    marginLeft: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tooltipTitle: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  tooltipValue: {\n    fontSize: 15,\n    marginTop: 5\n  }\n});\nexport default PieChart;","map":{"version":3,"sources":["E:/Documents/Semester 7/MAD/Project/client/node_modules/react-native-pure-chart/examples/pure-chart/components/pie-chart.js"],"names":["React","Component","numberWithCommas","PieChart","props","drawPie","bind","initData","handleEvent","state","pieSize","piePos","oldPiePos","pieIndex","dataSum","currentPieIdx","evtX","evtY","selectedIndex","labels","colors","data","nextProps","color","i","length","label","sum","value","angles","index","tempAngle","angle","Math","round","push","PI","setState","evt","pageX","nativeEvent","pageY","size","refs","test","measure","fx","fy","width","height","px","py","originX","originY","rSquare","pow","dx","dy","rad","atan2","degree","inPie","selectedAngle","selectedRad","idx","x","y","dist","pos","asin","marginLeft","marginTop","cos","sin","percentage","valueStr","borderWidth","borderRadius","padding","borderColor","backgroundColor","flexDirection","paddingLeft","alignItems","marginRight","styles","tooltipTitle","tooltipValue","add","translateX","translateY","rotate","big","transform","getTransform","opacity","borderBottomRightRadius","pies","position","locationX","locationY","e","handleEventOld","StyleSheet","flatten","container","drawT","drawInfoT","defaultProps","create","overflow","justifyContent","fontSize","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,gBAAT;;;;IAEMC,Q;;;;;AACJ,oBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,+BAAnB;AACA,UAAKG,KAAL,GAAa;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,SAAS,EAAE,EAJA;AAKXC,MAAAA,QAAQ,EAAE,EALC;AAMXC,MAAAA,OAAO,EAAE,CANE;AAOXC,MAAAA,aAAa,EAAE,CAAC,CAPL;AAQXC,MAAAA,IAAI,EAAE,CARK;AASXC,MAAAA,IAAI,EAAE,CATK;AAUXC,MAAAA,aAAa,EAAE,CAAC,CAVL;AAWXC,MAAAA,MAAM,EAAE,EAXG;AAYXC,MAAAA,MAAM,EAAE;AAZG,KAAb;AALkB;AAmBnB;;;;WAED,6BAAqB;AACnB,WAAKb,QAAL,CAAc,KAAKH,KAAL,CAAWiB,IAAzB;AACD;;;WACD,mCAA2BC,SAA3B,EAAsC;AACpC,UAAIA,SAAS,CAACD,IAAV,KAAmB,KAAKjB,KAAL,CAAWiB,IAAlC,EAAwC;AACtC,aAAKd,QAAL,CAAce,SAAS,CAACD,IAAxB;AACD;AACF;;;WAED,kBAAUA,IAAV,EAAgB;AACd,UAAID,MAAM,GAAG,EAAb;AACA,UAAID,MAAM,GAAG,EAAb;;AACA,UAAIE,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAZ,EAAmB;AACjB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCJ,UAAAA,MAAM,CAACI,CAAD,CAAN,GAAYH,IAAI,CAACG,CAAD,CAAJ,CAAQD,KAApB;AACD;AACF,OAJD,MAIO;AACL,aAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,EAAC,EAAlC,EAAsC;AACpCJ,UAAAA,MAAM,CAACI,EAAD,CAAN,GAAY,KAAKpB,KAAL,CAAWgB,MAAX,CAAkBI,EAAC,GAAG,KAAKpB,KAAL,CAAWgB,MAAX,CAAkBK,MAAxC,CAAZ;AACD;;AACD,YAAIJ,IAAI,CAACI,MAAL,KAAgB,KAAKrB,KAAL,CAAWgB,MAAX,CAAkBK,MAAlB,GAA2B,CAA/C,EAAkD;AAEhDL,UAAAA,MAAM,CAACC,IAAI,CAACI,MAAL,GAAc,CAAf,CAAN,GAA0B,KAAKrB,KAAL,CAAWgB,MAAX,CAAkB,CAAlB,CAA1B;AACD;AACF;;AAED,UAAIC,IAAI,CAAC,CAAD,CAAJ,CAAQK,KAAZ,EAAmB;AACjB,aAAK,IAAIF,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,GAAC,EAAlC,EAAsC;AACpCL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAYH,IAAI,CAACG,GAAD,CAAJ,CAAQE,KAApB;AACD;AACF,OAJD,MAIO;AACL,aAAK,IAAIF,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,GAAC,EAAlC,EAAsC;AACpCL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAY,IAAZ;AACD;AACF;;AAGD,UAAIG,GAAG,GAAG,CAAV;;AACA,WAAK,IAAIH,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,GAAC,EAAlC,EAAsC;AACpCG,QAAAA,GAAG,IAAIN,IAAI,CAACG,GAAD,CAAJ,CAAQI,KAAf;AACD;;AAED,UAAIlB,OAAO,GAAG,EAAd;AACA,UAAIG,QAAQ,GAAG,EAAf;AACA,UAAIgB,MAAM,GAAG,EAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,SAAS,GAAG,CAAhB;;AACA,WAAK,IAAIP,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,GAAC,EAAlC,EAAsC;AACpC,YAAIQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACG,GAAD,CAAJ,CAAQI,KAAR,GAAgBD,GAAhB,GAAsB,GAAjC,CAAZ;AACAE,QAAAA,MAAM,CAACM,IAAP,CAAYJ,SAAS,GAAGC,KAAxB;AACAD,QAAAA,SAAS,GAAGA,SAAS,GAAGC,KAAxB;;AACA,YAAIX,IAAI,CAACG,GAAD,CAAJ,CAAQI,KAAR,GAAgBD,GAAhB,GAAsB,CAAtB,GAA0BM,IAAI,CAACG,EAA/B,GAAoCH,IAAI,CAACG,EAA7C,EAAiD;AAC/CvB,UAAAA,QAAQ,CAACsB,IAAT,CAAcL,KAAd;AACAjB,UAAAA,QAAQ,CAACsB,IAAT,CAAcL,KAAd;AACApB,UAAAA,OAAO,CAACyB,IAAR,CAAaF,IAAI,CAACG,EAAlB;AACA1B,UAAAA,OAAO,CAACyB,IAAR,CAAad,IAAI,CAACG,GAAD,CAAJ,CAAQI,KAAR,GAAgBD,GAAhB,GAAsB,CAAtB,GAA0BM,IAAI,CAACG,EAA/B,GAAoCH,IAAI,CAACG,EAAtD;AACD,SALD,MAKO;AACLvB,UAAAA,QAAQ,CAACsB,IAAT,CAAcL,KAAd;AACApB,UAAAA,OAAO,CAACyB,IAAR,CAAad,IAAI,CAACG,GAAD,CAAJ,CAAQI,KAAR,GAAgBD,GAAhB,GAAsB,CAAtB,GAA0BM,IAAI,CAACG,EAA5C;AACD;;AACDN,QAAAA,KAAK;AACN;;AAED,UAAInB,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;;AACA,WAAK,IAAIa,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGd,OAAO,CAACe,MAA5B,EAAoCD,GAAC,EAArC,EAAyC;AACvCb,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAYb,MAAM,CAACa,GAAC,GAAG,CAAL,CAAN,GAAgBd,OAAO,CAACc,GAAC,GAAG,CAAL,CAAnC;AACD;;AAED,UAAIZ,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIY,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKpB,KAAL,CAAWiB,IAAX,CAAgBI,MAApC,EAA4CD,GAAC,EAA7C,EAAiD;AAC/CZ,QAAAA,SAAS,CAACY,GAAD,CAAT,GAAe,CAAC,CAAhB;AACD;;AACD,WAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGb,MAAM,CAACc,MAA3B,EAAmCD,GAAC,EAApC,EAAwC;AACtC,YAAIZ,SAAS,CAACC,QAAQ,CAACW,GAAD,CAAT,CAAT,KAA2B,CAAC,CAAhC,EAAmC;AACjCZ,UAAAA,SAAS,CAACC,QAAQ,CAACW,GAAD,CAAT,CAAT,GAAyBb,MAAM,CAACa,GAAD,CAA/B;AACD;AACF;;AAgBD,WAAKa,QAAL,CAAc;AACZlB,QAAAA,MAAM,EAAEA,MADI;AAEZC,QAAAA,MAAM,EAAEA,MAFI;AAGZV,QAAAA,OAAO,EAAEA,OAHG;AAIZC,QAAAA,MAAM,EAAEA,MAJI;AAKZO,QAAAA,aAAa,EAAE,CAAC,CALJ;AAMZL,QAAAA,QAAQ,EAAEA,QANE;AAOZgB,QAAAA,MAAM,EAAEA,MAPI;AAQZf,QAAAA,OAAO,EAAEa,GARG;AASZf,QAAAA,SAAS,EAAEA;AATC,OAAd;AAWD;;;WACD,wBAAgB0B,GAAhB,EAAqB;AAAA;;AAKnB,UAAIC,KAAK,GAAGD,GAAG,CAACE,WAAJ,CAAgBD,KAA5B;AACA,UAAIE,KAAK,GAAGH,GAAG,CAACE,WAAJ,CAAgBC,KAA5B;AACA,UAAOZ,MAAP,GAAiB,KAAKpB,KAAtB,CAAOoB,MAAP;AACA,UAAOa,IAAP,GAAe,KAAKtC,KAApB,CAAOsC,IAAP;AACA,WAAKC,IAAL,CAAUC,IAAV,CAAeC,OAAf,CAAuB,UAACC,EAAD,EAAKC,EAAL,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAmC;AACxD,YAAInC,IAAI,GAAGuB,KAAK,GAAGW,EAAnB;AACA,YAAIjC,IAAI,GAAIwB,KAAK,GAAGU,EAApB;AACA,YAAIC,OAAO,GAAGb,KAAK,GAAGW,EAAR,GAAaR,IAAI,GAAG,CAAlC;AACA,YAAIW,OAAO,GAAGX,IAAI,GAAG,CAAP,IAAYD,KAAK,GAAGU,EAApB,CAAd;AACA,YAAIG,OAAO,GAAGrB,IAAI,CAACsB,GAAL,CAASH,OAAT,EAAkB,CAAlB,IAAuBnB,IAAI,CAACsB,GAAL,CAASF,OAAT,EAAkB,CAAlB,CAArC;AACA,YAAIG,EAAE,GAAGJ,OAAT;AACA,YAAIK,EAAE,GAAG,CAAC,CAAD,GAAKJ,OAAd;AACA,YAAIK,GAAG,GAAGzB,IAAI,CAAC0B,KAAL,CAAWF,EAAX,EAAeD,EAAf,CAAV;AACA,YAAII,MAAM,GAAIF,GAAG,GAAG,GAAP,GAAczB,IAAI,CAACG,EAAhC;AACA,YAAIwB,MAAM,GAAG,CAAb,EAAgBA,MAAM,GAAG,MAAMA,MAAf;AAChB,YAAIC,KAAK,GAAGP,OAAO,GAAGrB,IAAI,CAACsB,GAAL,CAASb,IAAI,GAAG,CAAhB,EAAmB,CAAnB,CAAtB;AACA,YAAIxB,aAAa,GAAG,CAAC,CAArB;;AACA,YAAI2C,KAAJ,EAAW;AACT,eAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,MAAM,CAACJ,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,gBAAIoC,MAAM,GAAG/B,MAAM,CAACL,CAAD,CAAnB,EAAwB;AACtBN,cAAAA,aAAa,GAAGM,CAAhB;AACA;AACD;AACF;AACF;;AAED,QAAA,MAAI,CAACa,QAAL,CAAc;AACZrB,UAAAA,IAAI,EAAEA,IADM;AAEZC,UAAAA,IAAI,EAAEA,IAFM;AAGZmC,UAAAA,OAAO,EAAEA,OAHG;AAIZC,UAAAA,OAAO,EAAEA,OAJG;AAKZQ,UAAAA,KAAK,EAAEA,KALK;AAMZC,UAAAA,aAAa,EAAEF,MANH;AAOZG,UAAAA,WAAW,EAAEL,GAPD;AAQZxC,UAAAA,aAAa,EAAEA;AARH,SAAd;AAUD,OAhCD;AAiCD;;;WAED,qBAAa8C,GAAb,EAAkB;AAEhB,WAAK3B,QAAL,CAAc;AACZtB,QAAAA,aAAa,EAAE,KAAKN,KAAL,CAAWI,QAAX,CAAoBmD,GAApB;AADH,OAAd;AAGD;;;WASD,wBAAgB1B,GAAhB,EAAqB0B,GAArB,EAA0B;AAAA;;AAOxB,UAAIzB,KAAK,GAAGD,GAAG,CAACE,WAAJ,CAAgBD,KAA5B;AACA,UAAIE,KAAK,GAAGH,GAAG,CAACE,WAAJ,CAAgBC,KAA5B;AACA,WAAKJ,QAAL,CAAc;AACZtB,QAAAA,aAAa,EAAEiD;AADH,OAAd;AAGA,WAAKrB,IAAL,CAAUC,IAAV,CAAeC,OAAf,CAAuB,UAACC,EAAD,EAAKC,EAAL,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAmC;AACxD,QAAA,MAAI,CAACd,QAAL,CAAc;AACZrB,UAAAA,IAAI,EAAEuB,KAAK,GAAGW,EADF;AAEZjC,UAAAA,IAAI,EAAEwB,KAAK,GAAGU;AAFF,SAAd;AAKD,OAND;AAOD;;;WACD,qBAAac,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,UAAOxB,IAAP,GAAe,KAAKtC,KAApB,CAAOsC,IAAP;AACA,UAAIyB,IAAI,GAAGlC,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACsB,GAAL,CAASU,CAAT,EAAY,CAAZ,IAAiBhC,IAAI,CAACsB,GAAL,CAASW,CAAT,EAAY,CAAZ,CAA1B,EAA0C,GAA1C,CAAX;;AAEA,UAAIC,IAAI,IAAIzB,IAAZ,EAAkB;AAChB,YAAIZ,KAAK,GAAG,CAAC,CAAb;AAEA,YAAIsC,GAAG,GAAGH,CAAC,GAAG,CAAJ,GAAQhC,IAAI,CAACG,EAAL,GAAU,CAAV,GAAcH,IAAI,CAACoC,IAAL,CAAUH,CAAC,GAAGC,IAAd,CAAtB,GAA4ClC,IAAI,CAACG,EAAL,GAAU,CAAV,GAAc,CAAd,GAAkBH,IAAI,CAACoC,IAAL,CAAUH,CAAC,GAAGC,IAAd,CAAxE;;AAEA,aAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWE,MAAX,CAAkBc,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,cAAI,KAAKf,KAAL,CAAWE,MAAX,CAAkBa,CAAlB,IAAuB4C,GAA3B,EAAgC;AAChCtC,UAAAA,KAAK;AACN;;AACD,YAAIwC,UAAU,GAAGL,CAAjB;AACA,YAAIM,SAAS,GAAG,CAACL,CAAjB;AAEA,eACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACXlB,YAAAA,KAAK,EAAE,GADI;AAEXC,YAAAA,MAAM,EAAE,EAFG;AAGXqB,YAAAA,UAAU,EAAEA,UAHD;AAIXC,YAAAA,SAAS,EAAEA;AAJA,WAAb;AAAA,oBAME,MAAC,IAAD;AAAA,uBAAOtC,IAAI,CAACC,KAAL,CAAW,KAAKzB,KAAL,CAAWC,OAAX,CAAmBoB,KAAnB,KAA6B,IAAIG,IAAI,CAACG,EAAtC,IAA4C,KAAvD,IAAgE,GAAhE,GAAsE,IAAtE,GAA6E,KAAK3B,KAAL,CAAWmB,KAAX,CAAiBE,KAAjB,CAApF;AAAA;AANF,UADF;AAUD;AACF;;;WAED,mBAAWA,KAAX,EAAkB;AAChB,UAAOY,IAAP,GAAe,KAAKtC,KAApB,CAAOsC,IAAP;AAEA,UAAI0B,GAAG,GAAG,CAAC,KAAK3D,KAAL,CAAWG,SAAX,CAAqBkB,KAArB,IAA8B,KAAKrB,KAAL,CAAWG,SAAX,CAAqB,CAACkB,KAAK,GAAG,CAAT,IAAc,KAAKrB,KAAL,CAAWG,SAAX,CAAqBa,MAAxD,CAA/B,IAAkG,CAA5G;;AACA,UAAIK,KAAK,GAAG,CAAR,KAAc,KAAK1B,KAAL,CAAWiB,IAAX,CAAgBI,MAAlC,EAA0C;AACxC2C,QAAAA,GAAG,IAAInC,IAAI,CAACG,EAAZ;AACD;;AACD,UAAI6B,CAAC,GAAGvB,IAAI,GAAG,CAAP,GAAWT,IAAI,CAACuC,GAAL,CAAS,CAACJ,GAAV,CAAX,GAA4B1B,IAAI,GAAG,CAA3C;AACA,UAAIwB,CAAC,GAAG,CAACxB,IAAD,GAAQ,CAAR,GAAYT,IAAI,CAACwC,GAAL,CAAS,CAACL,GAAV,CAAZ,GAA6B1B,IAAI,GAAG,CAA5C;;AAEA,UAAIZ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,YAAI4C,UAAU,GAAGzC,IAAI,CAACC,KAAL,CAAY,KAAK9B,KAAL,CAAWiB,IAAX,CAAgBS,KAAhB,EAAuBF,KAAvB,GAA+B,IAA/B,GAAsC,KAAKnB,KAAL,CAAWK,OAA7D,IAAyE,EAAzE,GAA8E,GAA/F;AACA,YAAI6D,QAAQ,GAAGzE,gBAAgB,CAAC,KAAKE,KAAL,CAAWiB,IAAX,CAAgBS,KAAhB,EAAuBF,KAAxB,EAA+B,KAA/B,CAA/B;AACA,eACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACXqB,YAAAA,MAAM,EAAEP;AADG,WAAb;AAAA,oBAGE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AACX4B,cAAAA,UAAU,EAAEL,CAAC,GAAG,EADL;AAEXM,cAAAA,SAAS,EAAEL,CAAC,GAAG,EAFJ;AAGXU,cAAAA,WAAW,EAAE,CAHF;AAIXC,cAAAA,YAAY,EAAE,CAJH;AAKXC,cAAAA,OAAO,EAAE,CALE;AAMXC,cAAAA,WAAW,EAAE,SANF;AAOXC,cAAAA,eAAe,EAAE;AAPN,aAAb;AAAA,uBASE,MAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,aAAa,EAAE,KAAhB;AAAuBC,gBAAAA,WAAW,EAAE,CAApC;AAAuCC,gBAAAA,UAAU,EAAE;AAAnD,eAAb;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AACXnC,kBAAAA,KAAK,EAAE,EADI;AAEXC,kBAAAA,MAAM,EAAE,CAFG;AAGXmC,kBAAAA,WAAW,EAAE,CAHF;AAIXP,kBAAAA,YAAY,EAAE,CAJH;AAKXG,kBAAAA,eAAe,EAAE,KAAKvE,KAAL,CAAWW,MAAX,CAAkBU,KAAlB;AALN;AAAb,gBADF,EAQE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEuD,MAAM,CAACC,YAApB;AAAA,0BAAmC,KAAK7E,KAAL,CAAWU,MAAX,CAAkBW,KAAlB,IAA2B,KAAKrB,KAAL,CAAWU,MAAX,CAAkBW,KAAlB,CAA3B,GAAsD6C;AAAzF,gBARF;AAAA,cATF,EAoBE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEU,MAAM,CAACE,YAApB;AAAA,wBAAmC,KAAK9E,KAAL,CAAWU,MAAX,CAAkBW,KAAlB,IAA8B6C,QAA9B,UAA2CD,UAA3C,SAA2DA;AAA9F,cApBF;AAAA;AAHF,UADF;AA6BD;AACF;;;WACD,kBAAU5C,KAAV,EAAiBmC,CAAjB,EAAoBC,CAApB,EAAuB;AACrB,UAAOxB,IAAP,GAAe,KAAKtC,KAApB,CAAOsC,IAAP;;AACA,UAAIZ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,eACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACXkB,YAAAA,KAAK,EAAEN,IADI;AAEXO,YAAAA,MAAM,EAAEP;AAFG,WAAb;AAAA,oBAIE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AACXM,cAAAA,KAAK,EAAE,EADI;AAEXC,cAAAA,MAAM,EAAE,EAFG;AAGXqB,cAAAA,UAAU,EAAEL,CAAC,GAAG,EAHL;AAIXM,cAAAA,SAAS,EAAEL,CAAC,GAAG,EAJJ;AAKXU,cAAAA,WAAW,EAAE,CALF;AAMXC,cAAAA,YAAY,EAAE,CANH;AAOXE,cAAAA,WAAW,EAAE,SAPF;AAQXC,cAAAA,eAAe,EAAE;AARN,aAAb;AAAA,uBAWG,KAAKvE,KAAL,CAAWU,MAAX,CAAkBW,KAAlB,MAA6B,IAA7B,IACC,KAAC,IAAD;AAAA,wBAAO,KAAKrB,KAAL,CAAWU,MAAX,CAAkBW,KAAlB;AAAP,cAZJ,EAcE,MAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACmD,gBAAAA,aAAa,EAAE,KAAhB;AAAuBC,gBAAAA,WAAW,EAAE,CAApC;AAAuCC,gBAAAA,UAAU,EAAE;AAAnD,eAAb;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AACXnC,kBAAAA,KAAK,EAAE,EADI;AAEXC,kBAAAA,MAAM,EAAE,CAFG;AAGXmC,kBAAAA,WAAW,EAAE,CAHF;AAIXP,kBAAAA,YAAY,EAAE,CAJH;AAKXG,kBAAAA,eAAe,EAAE,KAAKvE,KAAL,CAAWW,MAAX,CAAkBU,KAAlB;AALN;AAAb,gBADF,EAQE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEuD,MAAM,CAACE,YAApB;AAAA,0BAAmC,KAAKnF,KAAL,CAAWiB,IAAX,CAAgBS,KAAhB,EAAuBF;AAA1D,gBARF;AAAA,cAdF,EAyBE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEyD,MAAM,CAACE,YAApB;AAAA,wBAAmC,KAAKnF,KAAL,CAAWiB,IAAX,CAAgBS,KAAhB,EAAuBF,KAAvB,GAA+B,GAA/B,GAAqC,KAAKnB,KAAL,CAAWK,OAAhD,GAA0D;AAA7F,cAzBF;AAAA;AAJF,UADF;AAmCD;AACF;;;WAED,sBAAc4C,GAAd,EAAmBV,KAAnB,EAAmC;AAAA,UAATwC,GAAS,uEAAH,CAAG;AACjC,UAAIvB,CAAC,GAAG,CAAC,IAAIjB,KAAK,GAAG,CAAb,IAAkBf,IAAI,CAACuC,GAAL,CAASd,GAAT,CAAlB,GAAkC,CAAC,IAAIV,KAAK,GAAG,CAAb,IAAkBf,IAAI,CAACwC,GAAL,CAASf,GAAT,CAA5D;AACA,UAAIQ,CAAC,GAAG,CAAC,IAAIlB,KAAK,GAAG,CAAb,IAAkBf,IAAI,CAACwC,GAAL,CAASf,GAAT,CAAlB,GAAkC,CAAC,IAAIV,KAAK,GAAG,CAAb,IAAkBf,IAAI,CAACuC,GAAL,CAASd,GAAT,CAA5D;AAEA,aAAO,CAAE;AAAC+B,QAAAA,UAAU,EAAG,CAAC,CAAD,GAAKxB,CAAN,GAAWjB,KAAK,GAAG,CAAnB,GAAuBwC;AAApC,OAAF,EAA4C;AAAEE,QAAAA,UAAU,EAAG,CAAC,CAAD,GAAKxB,CAAN,GAAWlB,KAAK,GAAG;AAAjC,OAA5C,EAAkF;AAAE2C,QAAAA,MAAM,EAAEjC,GAAG,GAAG;AAAhB,OAAlF,CAAP;AACD;;;WACD,iBAAS1B,KAAT,EAAgBT,KAAhB,EAAuBqE,GAAvB,EAA4B5B,GAA5B,EAAiC;AAC/B,UAAOtB,IAAP,GAAe,KAAKtC,KAApB,CAAOsC,IAAP;AACA,aACE,KAAC,IAAD;AAAA,kBACGV,KAAK,KAAK,CAAV,GACC,KAAC,IAAD,KADD,GAGCA,KAAK,GAAI,IAAI,CAAJ,GAAQC,IAAI,CAACG,EAAtB,GACE,MAAC,IAAD;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACY,cAAAA,KAAK,EAAEN,IAAR;AAAcO,cAAAA,MAAM,EAAEP,IAAI,GAAG;AAA7B;AAAb,YADF,EAEE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACuC,cAAAA,aAAa,EAAE,KAAhB;AAAuBD,cAAAA,eAAe,EAAE;AAAxC,aAAb;AAAA,uBAEE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAEXhC,gBAAAA,KAAK,EAAEN,IAAI,GAAG,CAFH;AAGXO,gBAAAA,MAAM,EAAEP,IAAI,GAAG,CAHJ;AAKXmD,gBAAAA,SAAS,EAAE,KAAKC,YAAL,CAAkB7D,IAAI,CAACG,EAAL,GAAU,CAA5B,EAA+BM,IAAI,GAAG,CAAtC,EAAyCA,IAAI,GAAG,CAAhD;AALA,eAAb;AAAA,wBAQE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE,EAAb;AAAA,0BAEG,KAAKrC,OAAL,CAAa2B,KAAK,GAAG,IAAI,CAAJ,GAAQC,IAAI,CAACG,EAAlC,EAAsCb,KAAtC,EAA6C,KAA7C,EAAoDyC,GAApD;AAFH;AARF,cAFF,EAiBE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACX+B,gBAAAA,OAAO,EAAE,CADE;AAGX/C,gBAAAA,KAAK,EAAEN,IAAI,GAAG,CAHH;AAIXO,gBAAAA,MAAM,EAAEP,IAAI,GAAG;AAJJ,eAAb;AAAA,wBAMG,KAAKrC,OAAL,CAAa,IAAI,CAAJ,GAAQ4B,IAAI,CAACG,EAA1B,EAA8Bb,KAA9B,EAAqC,KAArC,EAA4CyC,GAA5C;AANH,cAjBF;AAAA,YAFF;AAAA,UADF,GAkCA4B,GAAG,GACD,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACX5C,YAAAA,KAAK,EAAEN,IADI;AAEXO,YAAAA,MAAM,EAAEP;AAFG,WAAb;AAAA,qBAIE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACM,cAAAA,KAAK,EAAEN,IAAR;AAAcO,cAAAA,MAAM,EAAEP,IAAI,GAAG;AAA7B;AAAb,YAJF,EAKE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACuC,cAAAA,aAAa,EAAE;AAAhB,aAAb;AAAA,uBACE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACjC,gBAAAA,KAAK,EAAEN,IAAI,GAAG,CAAf;AAAkBO,gBAAAA,MAAM,EAAEP,IAAI,GAAG;AAAjC;AAAb,cADF,EAEE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACXM,gBAAAA,KAAK,EAAEN,IAAI,GAAG,CADH;AAEXO,gBAAAA,MAAM,EAAEP,IAAI,GAAG;AAFJ,eAAb;AAAA,wBAKE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AACXM,kBAAAA,KAAK,EAAEN,IAAI,GAAG,CADH;AAEXO,kBAAAA,MAAM,EAAEP,IAAI,GAAG,CAFJ;AAGXsD,kBAAAA,uBAAuB,EAAEtD,IAAI,GAAG,CAHrB;AAIXsC,kBAAAA,eAAe,EAAEzD,KAJN;AAKXsE,kBAAAA,SAAS,EAAE,KAAKC,YAAL,CAAkB9D,KAAK,GAAGC,IAAI,CAACG,EAAL,GAAU,CAApC,EAAuCM,IAAI,GAAG,CAA9C;AALA;AAAb;AALF,cAFF;AAAA,YALF;AAAA,UADC,GA0BD,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACXM,YAAAA,KAAK,EAAEN,IAAI,GAAG,CADH;AAEXO,YAAAA,MAAM,EAAEP,IAAI,GAAG;AAFJ,WAAb;AAAA,oBAKE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AACXM,cAAAA,KAAK,EAAEN,IAAI,GAAG,CADH;AAEXO,cAAAA,MAAM,EAAEP,IAAI,GAAG;AAFJ,aAAb;AAAA,sBAKE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACXM,gBAAAA,KAAK,EAAEN,IAAI,GAAG,CADH;AAEXO,gBAAAA,MAAM,EAAEP,IAAI,GAAG,CAFJ;AAGXsD,gBAAAA,uBAAuB,EAAEtD,IAAI,GAAG,CAHrB;AAIXsC,gBAAAA,eAAe,EAAEzD,KAJN;AAKXqD,gBAAAA,WAAW,EAAE,CALF;AAMXG,gBAAAA,WAAW,EAAExD,KANF;AAOXsE,gBAAAA,SAAS,EAAE,KAAKC,YAAL,CAAkB9D,KAAK,GAAGC,IAAI,CAACG,EAAL,GAAU,CAApC,EAAuCM,IAAI,GAAG,CAA9C;AAPA;AAAb;AALF;AALF;AAhEN,QADF;AA4FD;;;WACD,iBAAS;AACP,UAAIuD,IAAI,GAAG,EAAX;AACA,UAAI,KAAKxF,KAAL,CAAWC,OAAX,CAAmBe,MAAnB,KAA8B,CAAlC,EAAqC,OAAO,IAAP;;AACrC,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClDyE,QAAAA,IAAI,CAAC9D,IAAL,CACE,KAAC,IAAD;AAAoB,UAAA,KAAK,EAAE;AACzB0D,YAAAA,SAAS,EAAE,CAAC;AAACF,cAAAA,MAAM,EAAK,KAAKlF,KAAL,CAAWE,MAAX,CAAkBa,CAAlB,CAAL;AAAP,aAAD,CADc;AAEzB0E,YAAAA,QAAQ,EAAE;AAFe,WAA3B;AAAA,oBAMI,KAAK7F,OAAL,CAAa,KAAKI,KAAL,CAAWC,OAAX,CAAmBc,CAAnB,CAAb,EAAoC,KAAKf,KAAL,CAAWW,MAAX,CAAkB,KAAKX,KAAL,CAAWI,QAAX,CAAoBW,CAApB,CAAlB,CAApC,EAA+E,IAA/E,EAAqFA,CAArF;AANJ,iBAAeA,CAAf,CADF;AAWD;;AACD,aACEyE,IADF;AAGD;;;WACD,kBAAU;AAAA;;AACR,wBACqB,KAAKxF,KAD1B;AAAA,UAAOS,aAAP,eAAOA,aAAP;AAAA,UAAsBiF,SAAtB,eAAsBA,SAAtB;AAAA,UAAiCC,SAAjC,eAAiCA,SAAjC;AAAA,UAA4CpF,IAA5C,eAA4CA,IAA5C;AAAA,UAAkDC,IAAlD,eAAkDA,IAAlD;AAAA,UAAwD4C,KAAxD,eAAwDA,KAAxD;AAAA,UAA+DC,aAA/D,eAA+DA,aAA/D;AAAA,UACEpD,OADF,eACEA,OADF;AAAA,UACWmB,MADX,eACWA,MADX;AAEA,UAAOa,IAAP,GAAe,KAAKtC,KAApB,CAAOsC,IAAP;AACA,aACE,KAAC,IAAD;AAAM,QAAA,WAAW,EAAE,KAAnB;AAAA,kBAEE,KAAC,wBAAD;AAA0B,UAAA,OAAO,EAAE,iBAAC2D,CAAD,EAAO;AAIxC,YAAA,MAAI,CAACC,cAAL,CAAoBD,CAApB;AACD,WALD;AAAA,oBAOE,MAAC,IAAD;AAAM,YAAA,GAAG,EAAC,MAAV;AAAiB,YAAA,KAAK,EAAEE,UAAU,CAACC,OAAX,CAAmB,CAACnB,MAAM,CAACoB,SAAR,EAAmB;AAC5DzD,cAAAA,KAAK,EAAEN,IADqD;AAE5DO,cAAAA,MAAM,EAAEP;AAFoD,aAAnB,CAAnB,CAAxB;AAAA,uBAKG,KAAKgE,KAAL,EALH,EAMG,KAAKC,SAAL,CAAe,KAAKlG,KAAL,CAAWS,aAA1B,CANH;AAAA;AAPF;AAFF,QADF;AAsBD;;;;EAldoBlB,KAAK,CAACC,S;;AAqd7BE,QAAQ,CAACyG,YAAT,GAAwB;AACtBvF,EAAAA,IAAI,EAAE,CAAC;AAACO,IAAAA,KAAK,EAAE;AAAR,GAAD,EAAc;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAd,EAA2B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAA3B,EAAwC;AAACA,IAAAA,KAAK,EAAE;AAAR,GAAxC,CADgB;AAEtBR,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAFc;AAGtBsB,EAAAA,IAAI,EAAE;AAHgB,CAAxB;AAKA,IAAM2C,MAAM,GAAGkB,UAAU,CAACM,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,QAAQ,EAAE,QADD;AAETxC,IAAAA,UAAU,EAAE,CAFH;AAGTa,IAAAA,UAAU,EAAE,QAHH;AAIT4B,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BzB,EAAAA,YAAY,EAAE;AAAC0B,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,UAAU,EAAE;AAA3B,GAPiB;AAQ/B1B,EAAAA,YAAY,EAAE;AAACyB,IAAAA,QAAQ,EAAE,EAAX;AAAezC,IAAAA,SAAS,EAAE;AAA1B;AARiB,CAAlB,CAAf;AAWA,eAAepE,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Alert, AppRegistry, StyleSheet, View, Text, TouchableWithoutFeedback, TouchableOpacity } from 'react-native'\nimport { numberWithCommas } from '../common'\n\nclass PieChart extends React.Component {\n  constructor (props) {\n    super(props)\n    this.drawPie = this.drawPie.bind(this)\n    this.initData = this.initData.bind(this)\n    this.handleEvent = this.handleEvent.bind(this)\n    this.state = {\n      // pieSize[i] : size of ith pie, piePos[i] : starting position of ith pie;\n      pieSize: [],\n      piePos: [],\n      oldPiePos: [],\n      pieIndex: [],\n      dataSum: 0,\n      currentPieIdx: -1,\n      evtX: 0,\n      evtY: 0,\n      selectedIndex: -1,\n      labels: [],\n      colors: []\n    }\n  }\n  // initData!!\n  componentDidMount () {\n    this.initData(this.props.data)\n  }\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.initData(nextProps.data)\n    }\n  }\n  // initialize data\n  initData (data) {\n    let colors = []\n    let labels = []\n    if (data[0].color) {\n      for (let i = 0; i < data.length; i++) {\n        colors[i] = data[i].color\n      }\n    } else {\n      for (let i = 0; i < data.length; i++) {\n        colors[i] = this.props.colors[i % this.props.colors.length]\n      }\n      if (data.length === this.props.colors.length + 1) {\n        // 임의로 3으로 지정함 바꿔도 무방\n        colors[data.length - 1] = this.props.colors[3]\n      }\n    }\n\n    if (data[0].label) {\n      for (let i = 0; i < data.length; i++) {\n        labels[i] = data[i].label\n      }\n    } else {\n      for (let i = 0; i < data.length; i++) {\n        labels[i] = null\n      }\n    }\n\n    // validation\n    let sum = 0\n    for (let i = 0; i < data.length; i++) {\n      sum += data[i].value\n    }\n    // pieSize에는 각각 라디안값이 들어감\n    let pieSize = []\n    let pieIndex = []\n    let angles = []\n    let index = 0\n    let tempAngle = 0\n    for (let i = 0; i < data.length; i++) {\n      let angle = Math.round(data[i].value / sum * 360)\n      angles.push(tempAngle + angle)\n      tempAngle = tempAngle + angle\n      if (data[i].value / sum * 2 * Math.PI > Math.PI) {\n        pieIndex.push(index)\n        pieIndex.push(index)\n        pieSize.push(Math.PI)\n        pieSize.push(data[i].value / sum * 2 * Math.PI - Math.PI)\n      } else {\n        pieIndex.push(index)\n        pieSize.push(data[i].value / sum * 2 * Math.PI)\n      }\n      index++\n    }\n    // piePos에는 각각 시작위치가 라디안 값으로 들어감\n    let piePos = []\n    piePos[0] = 0\n    for (let i = 1; i < pieSize.length; i++) {\n      piePos[i] = piePos[i - 1] + pieSize[i - 1]\n    }\n\n    let oldPiePos = []\n    for (let i = 0; i < this.props.data.length; i++) {\n      oldPiePos[i] = -1\n    }\n    for (let i = 0; i < piePos.length; i++) {\n      if (oldPiePos[pieIndex[i]] === -1) {\n        oldPiePos[pieIndex[i]] = piePos[i]\n      }\n    }\n\n    /*\n    for (let i = 0; i < this.props.data.length; i++) {\n      console.log(oldPiePos[i])\n    }\n    */\n\n    /*\n    for (let i = 0; i < data.length; i++) {\n      console.log(data[i].value)\n      console.log(labels[i])\n      console.log(colors[i])\n    }\n    */\n\n    this.setState({\n      labels: labels,\n      colors: colors,\n      pieSize: pieSize,\n      piePos: piePos,\n      selectedIndex: -1,\n      pieIndex: pieIndex,\n      angles: angles,\n      dataSum: sum,\n      oldPiePos: oldPiePos\n    })\n  }\n  handleEventOld (evt) {\n    /* this.setState({\n      evtX: evt.nativeEvent.pageX,\n      evtY: evt.nativeEvent.pageY\n    }) */\n    let pageX = evt.nativeEvent.pageX\n    let pageY = evt.nativeEvent.pageY\n    const {angles} = this.state\n    const {size} = this.props\n    this.refs.test.measure((fx, fy, width, height, px, py) => {\n      let evtX = pageX - px\n      let evtY = (pageY - py)\n      let originX = pageX - px - size / 2\n      let originY = size / 2 - (pageY - py)\n      let rSquare = Math.pow(originX, 2) + Math.pow(originY, 2)\n      let dx = originX\n      let dy = -1 * originY\n      let rad = Math.atan2(dy, dx)\n      let degree = (rad * 180) / Math.PI\n      if (degree < 0) degree = 360 + degree\n      let inPie = rSquare < Math.pow(size / 2, 2)\n      let selectedIndex = -1\n      if (inPie) {\n        for (let i = 0; i < angles.length; i++) {\n          if (degree < angles[i]) {\n            selectedIndex = i\n            break\n          }\n        }\n      }\n\n      this.setState({\n        evtX: evtX,\n        evtY: evtY,\n        originX: originX,\n        originY: originY,\n        inPie: inPie,\n        selectedAngle: degree,\n        selectedRad: rad,\n        selectedIndex: selectedIndex\n      })\n    })\n  }\n\n  handleEvent (idx) {\n //   console.log(idx)\n    this.setState({\n      currentPieIdx: this.state.pieIndex[idx]\n    })\n  }\n  /*\n  handleEvent (a, b, c) {\n    console.log(a)\n    console.log(b)\n    console.log(c)\n  }\n  */\n\n  handleEventBak (evt, idx) {\n    /* this.setState({\n      evtX: evt.nativeEvent.pageX,\n      evtY: evt.nativeEvent.pageY\n    }) */\n\n    // console.log(idx)\n    let pageX = evt.nativeEvent.pageX\n    let pageY = evt.nativeEvent.pageY\n    this.setState({\n      currentPieIdx: idx\n    })\n    this.refs.test.measure((fx, fy, width, height, px, py) => {\n      this.setState({\n        evtX: pageX - px,\n        evtY: pageY - py\n\n      })\n    })\n  }\n  drawInfoOld (x, y) {\n    const {size} = this.props\n    let dist = Math.pow(Math.pow(x, 2) + Math.pow(y, 2), 0.5)\n    // console.log('x: ' + x + '  y: ' + y)\n    if (dist <= size) {\n      let index = -1\n      // 중심 y축 기준으로 오른쪽 왼쪽\n      let pos = x > 0 ? Math.PI / 2 - Math.asin(y / dist) : Math.PI * 3 / 2 + Math.asin(y / dist)\n      // index 값 정하기 piePos piePos 값보다 pos값이 작을 경우 멈춤\n      for (let i = 0; i < this.state.piePos.length; i++) {\n        if (this.state.piePos[i] > pos) break\n        index++\n      }\n      let marginLeft = x\n      let marginTop = -y\n\n      return (\n        <View style={{\n          width: 100,\n          height: 80,\n          marginLeft: marginLeft,\n          marginTop: marginTop\n        }} >\n          <Text>{Math.round(this.state.pieSize[index] / (2 * Math.PI) * 10000) / 100 + '\\n' + this.state.value[index]} </Text>\n        </View>\n      )\n    }\n  }\n\n  drawInfoT (index) {\n    const {size} = this.props\n\n    let pos = (this.state.oldPiePos[index] + this.state.oldPiePos[(index + 1) % this.state.oldPiePos.length]) / 2\n    if (index + 1 === this.props.data.length) {\n      pos += Math.PI\n    }\n    let x = size / 4 * Math.cos(-pos) + size / 2\n    let y = -size / 4 * Math.sin(-pos) + size / 2\n\n    if (index !== -1) {\n      let percentage = Math.round((this.props.data[index].value * 1000 / this.state.dataSum)) / 10 + '%'\n      let valueStr = numberWithCommas(this.props.data[index].value, false)\n      return (\n        <View style={{\n          height: size\n        }}>\n          <View style={{\n            marginLeft: x - 60,\n            marginTop: y - 40,\n            borderWidth: 1,\n            borderRadius: 5,\n            padding: 5,\n            borderColor: '#e0e0e0',\n            backgroundColor: '#FFFFFF'\n          }}>\n            <View style={{flexDirection: 'row', paddingLeft: 5, alignItems: 'center'}}>\n              <View style={{\n                width: 10,\n                height: 5,\n                marginRight: 3,\n                borderRadius: 2,\n                backgroundColor: this.state.colors[index]\n              }} />\n              <Text style={styles.tooltipTitle}>{this.state.labels[index] ? this.state.labels[index] : valueStr}</Text>\n            </View>\n\n            <Text style={styles.tooltipValue}>{this.state.labels[index] ? `${valueStr} (${percentage})` : percentage}</Text>\n\n          </View>\n        </View>\n      )\n    }\n  }\n  drawInfo (index, x, y) {\n    const {size} = this.props\n    if (index !== -1) {\n      return (\n        <View style={{\n          width: size,\n          height: size\n        }}>\n          <View style={{\n            width: 60,\n            height: 80,\n            marginLeft: x - 30,\n            marginTop: y - 40,\n            borderWidth: 2,\n            borderRadius: 5,\n            borderColor: '#e0e0e0',\n            backgroundColor: '#FFFFFF'\n          }}>\n\n            {this.state.labels[index] !== null &&\n              <Text>{this.state.labels[index]}</Text>\n            }\n            <View style={{flexDirection: 'row', paddingLeft: 5, alignItems: 'center'}}>\n              <View style={{\n                width: 10,\n                height: 5,\n                marginRight: 3,\n                borderRadius: 2,\n                backgroundColor: this.state.colors[index]\n              }} />\n              <Text style={styles.tooltipValue}>{this.props.data[index].value}</Text>\n            </View>\n\n            <Text style={styles.tooltipValue}>{this.props.data[index].value * 100 / this.state.dataSum + '%'}</Text>\n\n          </View>\n        </View>\n      )\n    }\n  }\n\n  getTransform (rad, width, add = 0) {\n    let x = (0 - width / 2) * Math.cos(rad) - (0 - width / 2) * Math.sin(rad)\n    let y = (0 - width / 2) * Math.sin(rad) + (0 - width / 2) * Math.cos(rad)\n\n    return [ {translateX: (-1 * x) - width / 2 + add}, { translateY: (-1 * y) - width / 2 }, { rotate: rad + 'rad' } ]\n  }\n  drawPie (angle, color, big, idx) {\n    const {size} = this.props\n    return (\n      <View>\n        {angle === 0 ? (\n          <View />\n        ) : (\n          angle > (1 / 2 * Math.PI) ? (\n            <View>\n              <View style={{width: size, height: size / 2}} />\n              <View style={{flexDirection: 'row', backgroundColor: 'transparent'}}>\n\n                <View style={{\n\n                  width: size / 2,\n                  height: size / 2,\n\n                  transform: this.getTransform(Math.PI / 2, size / 2, size / 2)\n                }}>\n\n                  <View style={{\n                  }}>\n                    {this.drawPie(angle - 1 / 2 * Math.PI, color, false, idx)}\n                  </View>\n\n                </View>\n\n                <View style={{\n                  opacity: 1,\n\n                  width: size / 2,\n                  height: size / 2\n                }}>\n                  {this.drawPie(1 / 2 * Math.PI, color, false, idx)}\n                </View>\n\n              </View>\n            </View>\n\n        ) : (\n          // big 사용이유\n          big ? (\n            <View style={{\n              width: size,\n              height: size\n            }}>\n              <View style={{width: size, height: size / 2}} />\n              <View style={{flexDirection: 'row'}}>\n                <View style={{width: size / 2, height: size / 2}} />\n                <View style={{\n                  width: size / 2,\n                  height: size / 2\n                }}>\n\n                  <View style={{\n                    width: size / 2,\n                    height: size / 2,\n                    borderBottomRightRadius: size / 2,\n                    backgroundColor: color,\n                    transform: this.getTransform(angle - Math.PI / 2, size / 2)\n                  }} />\n\n                </View>\n\n              </View>\n            </View>\n          ) : (\n            <View style={{\n              width: size / 2,\n              height: size / 2\n            }}>\n\n              <View style={{\n                width: size / 2,\n                height: size / 2\n              }}>\n\n                <View style={{\n                  width: size / 2,\n                  height: size / 2,\n                  borderBottomRightRadius: size / 2,\n                  backgroundColor: color,\n                  borderWidth: 0,\n                  borderColor: color,\n                  transform: this.getTransform(angle - Math.PI / 2, size / 2)\n                }} />\n\n              </View>\n\n            </View>\n          )\n        ))}\n      </View>\n    )\n  }\n  drawT () {\n    let pies = []\n    if (this.state.pieSize.length === 0) return null\n    for (let i = 0; i < this.state.pieSize.length; i++) {\n      pies.push(\n        <View key={`t${i}`} style={{\n          transform: [{rotate: `${this.state.piePos[i]}rad`}],\n          position: 'absolute'\n\n        }}>\n          {\n            this.drawPie(this.state.pieSize[i], this.state.colors[this.state.pieIndex[i]], true, i)\n          }\n        </View>\n        )\n    }\n    return (\n      pies\n    )\n  }\n  render () {\n    const {selectedIndex, locationX, locationY, evtX, evtY, inPie, selectedAngle,\n      pieSize, angles} = this.state\n    const {size} = this.props\n    return (\n      <View collapsable={false}>\n\n        <TouchableWithoutFeedback onPress={(e) => {\n          // const {locationX, locationY} = e.nativeEvent\n          // console.log(locationX, locationY)\n          // this.setState({locationX: locationX, locationY: locationY})\n          this.handleEventOld(e)\n        }}>\n\n          <View ref='test' style={StyleSheet.flatten([styles.container, {\n            width: size,\n            height: size\n          }])}>\n\n            {this.drawT()}\n            {this.drawInfoT(this.state.selectedIndex)}\n          </View>\n\n        </TouchableWithoutFeedback>\n      </View>\n    )\n  }\n}\n\nPieChart.defaultProps = {\n  data: [{value: 10}, {value: 20}, {value: 40}, {value: 100}],\n  colors: ['#009ef2', '#ff4d7d', '#00c4c3', '#ffd12f', '#e7e9ed'],\n  size: 200\n}\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    marginLeft: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tooltipTitle: {fontSize: 18, fontWeight: 'bold'},\n  tooltipValue: {fontSize: 15, marginTop: 5}\n})\n\nexport default PieChart\n"]},"metadata":{},"sourceType":"module"}